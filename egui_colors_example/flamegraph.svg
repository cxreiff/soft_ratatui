<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1093.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="20411"><g><title>AppKit`+[NSApplication sharedApplication] (9 samples, 0.04%)</title><rect x="0.0049%" y="869" width="0.0441%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="9"/><text x="0.2549%" y="879.50"></text></g><g><title>AppKit`-[NSApplication init] (9 samples, 0.04%)</title><rect x="0.0049%" y="853" width="0.0441%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="9"/><text x="0.2549%" y="863.50"></text></g><g><title>egui_example`eframe::native::run::create_event_loop (10 samples, 0.05%)</title><rect x="0.0049%" y="917" width="0.0490%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="10"/><text x="0.2549%" y="927.50"></text></g><g><title>egui_example`winit::platform_impl::macos::event_loop::EventLoop&lt;T&gt;::new (10 samples, 0.05%)</title><rect x="0.0049%" y="901" width="0.0490%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="10"/><text x="0.2549%" y="911.50"></text></g><g><title>egui_example`objc2_app_kit::generated::__NSApplication::NSApplication::sharedApplication (10 samples, 0.05%)</title><rect x="0.0049%" y="885" width="0.0490%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="10"/><text x="0.2549%" y="895.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _setMenuBarObscured:] (3 samples, 0.01%)</title><rect x="0.0637%" y="821" width="0.0147%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="3"/><text x="0.3137%" y="831.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _updateMenuBarObscured:] (3 samples, 0.01%)</title><rect x="0.0637%" y="805" width="0.0147%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="3"/><text x="0.3137%" y="815.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _showMenuBarWithAnimation:postingEvent:orderWindow:forAutoShow:noteVisibility:] (3 samples, 0.01%)</title><rect x="0.0637%" y="789" width="0.0147%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="3"/><text x="0.3137%" y="799.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _setBoundsAndUpdateResolution] (3 samples, 0.01%)</title><rect x="0.0637%" y="773" width="0.0147%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="3"/><text x="0.3137%" y="783.50"></text></g><g><title>AppKit`-[NSApplication _handleActivatedEvent:] (4 samples, 0.02%)</title><rect x="0.0637%" y="837" width="0.0196%" height="15" fill="rgb(220,122,19)" fg:x="13" fg:w="4"/><text x="0.3137%" y="847.50"></text></g><g><title>egui_example`epaint::image::ColorImage::from_rgb (9 samples, 0.04%)</title><rect x="0.1127%" y="389" width="0.0441%" height="15" fill="rgb(250,228,42)" fg:x="23" fg:w="9"/><text x="0.3627%" y="399.50"></text></g><g><title>egui_example`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.04%)</title><rect x="0.1127%" y="373" width="0.0441%" height="15" fill="rgb(240,193,28)" fg:x="23" fg:w="9"/><text x="0.3627%" y="383.50"></text></g><g><title>egui_example`ratatui::buffer::cell::Cell::set_char (3 samples, 0.01%)</title><rect x="0.1568%" y="357" width="0.0147%" height="15" fill="rgb(216,20,37)" fg:x="32" fg:w="3"/><text x="0.4068%" y="367.50"></text></g><g><title>egui_example`&lt;&amp;mut egui_example::App as ratatui::widgets::Widget&gt;::render (4 samples, 0.02%)</title><rect x="0.1568%" y="373" width="0.0196%" height="15" fill="rgb(206,188,39)" fg:x="32" fg:w="4"/><text x="0.4068%" y="383.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::buffer_line::BufferLine&gt; (3 samples, 0.01%)</title><rect x="0.3870%" y="341" width="0.0147%" height="15" fill="rgb(217,207,13)" fg:x="79" fg:w="3"/><text x="0.6370%" y="351.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::cached::Cached&lt;cosmic_text::shape::ShapeLine&gt;&gt; (3 samples, 0.01%)</title><rect x="0.3870%" y="325" width="0.0147%" height="15" fill="rgb(231,73,38)" fg:x="79" fg:w="3"/><text x="0.6370%" y="335.50"></text></g><g><title>egui_example`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.01%)</title><rect x="0.4703%" y="229" width="0.0147%" height="15" fill="rgb(225,20,46)" fg:x="96" fg:w="3"/><text x="0.7203%" y="239.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="0.4703%" y="213" width="0.0147%" height="15" fill="rgb(210,31,41)" fg:x="96" fg:w="3"/><text x="0.7203%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.01%)</title><rect x="0.4703%" y="197" width="0.0147%" height="15" fill="rgb(221,200,47)" fg:x="96" fg:w="3"/><text x="0.7203%" y="207.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeWord::build (11 samples, 0.05%)</title><rect x="0.4458%" y="261" width="0.0539%" height="15" fill="rgb(226,26,5)" fg:x="91" fg:w="11"/><text x="0.6958%" y="271.50"></text></g><g><title>egui_example`cosmic_text::shape::Shaping::run (9 samples, 0.04%)</title><rect x="0.4556%" y="245" width="0.0441%" height="15" fill="rgb(249,33,26)" fg:x="93" fg:w="9"/><text x="0.7056%" y="255.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeSpan::build (14 samples, 0.07%)</title><rect x="0.4360%" y="277" width="0.0686%" height="15" fill="rgb(235,183,28)" fg:x="89" fg:w="14"/><text x="0.6860%" y="287.50"></text></g><g><title>egui_example`unicode_bidi::BidiInfo::new_with_data_source (9 samples, 0.04%)</title><rect x="0.5046%" y="277" width="0.0441%" height="15" fill="rgb(221,5,38)" fg:x="103" fg:w="9"/><text x="0.7546%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5 samples, 0.02%)</title><rect x="0.5242%" y="261" width="0.0245%" height="15" fill="rgb(247,18,42)" fg:x="107" fg:w="5"/><text x="0.7742%" y="271.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeLine::build (31 samples, 0.15%)</title><rect x="0.4115%" y="293" width="0.1519%" height="15" fill="rgb(241,131,45)" fg:x="84" fg:w="31"/><text x="0.6615%" y="303.50"></text></g><g><title>egui_example`cosmic_text::buffer_line::BufferLine::shape (32 samples, 0.16%)</title><rect x="0.4115%" y="309" width="0.1568%" height="15" fill="rgb(249,31,29)" fg:x="84" fg:w="32"/><text x="0.6615%" y="319.50"></text></g><g><title>egui_example`cosmic_text::buffer_line::BufferLine::layout (39 samples, 0.19%)</title><rect x="0.4017%" y="325" width="0.1911%" height="15" fill="rgb(225,111,53)" fg:x="82" fg:w="39"/><text x="0.6517%" y="335.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeLine::layout_to_buffer (5 samples, 0.02%)</title><rect x="0.5683%" y="309" width="0.0245%" height="15" fill="rgb(238,160,17)" fg:x="116" fg:w="5"/><text x="0.8183%" y="319.50"></text></g><g><title>egui_example`cosmic_text::buffer::Buffer::line_layout (42 samples, 0.21%)</title><rect x="0.4017%" y="341" width="0.2058%" height="15" fill="rgb(214,148,48)" fg:x="82" fg:w="42"/><text x="0.6517%" y="351.50"></text></g><g><title>egui_example`eframe::native::epi_integration::EpiIntegration::update (103 samples, 0.50%)</title><rect x="0.1127%" y="437" width="0.5046%" height="15" fill="rgb(232,36,49)" fg:x="23" fg:w="103"/><text x="0.3627%" y="447.50"></text></g><g><title>egui_example`egui::context::Context::run (103 samples, 0.50%)</title><rect x="0.1127%" y="421" width="0.5046%" height="15" fill="rgb(209,103,24)" fg:x="23" fg:w="103"/><text x="0.3627%" y="431.50"></text></g><g><title>egui_example`&lt;egui_example::MyApp as eframe::epi::App&gt;::update (103 samples, 0.50%)</title><rect x="0.1127%" y="405" width="0.5046%" height="15" fill="rgb(229,88,8)" fg:x="23" fg:w="103"/><text x="0.3627%" y="415.50"></text></g><g><title>egui_example`ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw (94 samples, 0.46%)</title><rect x="0.1568%" y="389" width="0.4605%" height="15" fill="rgb(213,181,19)" fg:x="32" fg:w="94"/><text x="0.4068%" y="399.50"></text></g><g><title>egui_example`&lt;soft_ratatui::soft_backend::SoftBackend as ratatui::backend::Backend&gt;::draw (90 samples, 0.44%)</title><rect x="0.1764%" y="373" width="0.4409%" height="15" fill="rgb(254,191,54)" fg:x="36" fg:w="90"/><text x="0.4264%" y="383.50"></text></g><g><title>egui_example`soft_ratatui::soft_backend::SoftBackend::draw_cell (90 samples, 0.44%)</title><rect x="0.1764%" y="357" width="0.4409%" height="15" fill="rgb(241,83,37)" fg:x="36" fg:w="90"/><text x="0.4264%" y="367.50"></text></g><g><title>egui_example`egui_glow::painter::Painter::paint_and_update_textures (9 samples, 0.04%)</title><rect x="0.6173%" y="437" width="0.0441%" height="15" fill="rgb(233,36,39)" fg:x="126" fg:w="9"/><text x="0.8673%" y="447.50"></text></g><g><title>egui_example`egui_glow::painter::Painter::upload_texture_srgb (9 samples, 0.04%)</title><rect x="0.6173%" y="421" width="0.0441%" height="15" fill="rgb(226,3,54)" fg:x="126" fg:w="9"/><text x="0.8673%" y="431.50"></text></g><g><title>libGL.dylib`glTexImage2D (9 samples, 0.04%)</title><rect x="0.6173%" y="405" width="0.0441%" height="15" fill="rgb(245,192,40)" fg:x="126" fg:w="9"/><text x="0.8673%" y="415.50"></text></g><g><title>GLEngine`glTexImage2D_Exec (9 samples, 0.04%)</title><rect x="0.6173%" y="389" width="0.0441%" height="15" fill="rgb(238,167,29)" fg:x="126" fg:w="9"/><text x="0.8673%" y="399.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldModifyTexSubImage (9 samples, 0.04%)</title><rect x="0.6173%" y="373" width="0.0441%" height="15" fill="rgb(232,182,51)" fg:x="126" fg:w="9"/><text x="0.8673%" y="383.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::uploadTextureLevel(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, GLDBufferRec*, unsigned char*, int, int, int, id&lt;MTLCommandBufferSPI&gt; () block_pointer, void (objc_object&lt;MTLCommandBufferSPI&gt;, unsigned int) block_pointer, void (void () block_pointer) block_pointer, void (void  (9 samples, 0.04%)</title><rect x="0.6173%" y="357" width="0.0441%" height="15" fill="rgb(231,60,39)" fg:x="126" fg:w="9"/><text x="0.8673%" y="367.50"></text></g><g><title>AppleMetalOpenGLRenderer`invocation function for block in GLDTextureRec::uploadTextureLevel(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, GLDBufferRec*, unsigned char*, int, int, int, id&lt;MTLCommandBufferSPI&gt; () block_pointer, void (objc_object&lt;MTLCommandBufferSPI&gt;, unsigned int) block_pointer, void (void () block_pointer) block_pointer, void (void  (9 samples, 0.04%)</title><rect x="0.6173%" y="341" width="0.0441%" height="15" fill="rgb(208,69,12)" fg:x="126" fg:w="9"/><text x="0.8673%" y="351.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (9 samples, 0.04%)</title><rect x="0.6173%" y="325" width="0.0441%" height="15" fill="rgb(235,93,37)" fg:x="126" fg:w="9"/><text x="0.8673%" y="335.50"></text></g><g><title>AGXMetalG14X`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14X::Encoders, AGX::G14X::Classes&gt;::writeRegion (9 samples, 0.04%)</title><rect x="0.6173%" y="309" width="0.0441%" height="15" fill="rgb(213,116,39)" fg:x="126" fg:w="9"/><text x="0.8673%" y="319.50"></text></g><g><title>AGXMetalG14X`void TiledMemory&lt;(TwiddleOrder)1&gt;::convertTiles2D&lt;false&gt;(void*, void const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned long, unsigned int, unsigned int, unsigned long, void (*) (9 samples, 0.04%)</title><rect x="0.6173%" y="293" width="0.0441%" height="15" fill="rgb(222,207,29)" fg:x="126" fg:w="9"/><text x="0.8673%" y="303.50"></text></g><g><title>AGXMetalG14X`void agxsTwiddleAddressCommon&lt;(TwiddleOrder)1, AGXSConverterPassThru&lt;true, 4ul, 1u, (TwiddleOrder)1&gt;&gt;(AGXSConverterPassThru&lt;true, 4ul, 1u, (TwiddleOrder)1&gt;::twid_ptr_type, AGXSConverterPassThru&lt;true, 4ul, 1u, (9 samples, 0.04%)</title><rect x="0.6173%" y="277" width="0.0441%" height="15" fill="rgb(206,96,30)" fg:x="126" fg:w="9"/><text x="0.8673%" y="287.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (118 samples, 0.58%)</title><rect x="0.0931%" y="837" width="0.5781%" height="15" fill="rgb(218,138,4)" fg:x="19" fg:w="118"/><text x="0.3431%" y="847.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (118 samples, 0.58%)</title><rect x="0.0931%" y="821" width="0.5781%" height="15" fill="rgb(250,191,14)" fg:x="19" fg:w="118"/><text x="0.3431%" y="831.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (118 samples, 0.58%)</title><rect x="0.0931%" y="805" width="0.5781%" height="15" fill="rgb(239,60,40)" fg:x="19" fg:w="118"/><text x="0.3431%" y="815.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (118 samples, 0.58%)</title><rect x="0.0931%" y="789" width="0.5781%" height="15" fill="rgb(206,27,48)" fg:x="19" fg:w="118"/><text x="0.3431%" y="799.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (118 samples, 0.58%)</title><rect x="0.0931%" y="773" width="0.5781%" height="15" fill="rgb(225,35,8)" fg:x="19" fg:w="118"/><text x="0.3431%" y="783.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (118 samples, 0.58%)</title><rect x="0.0931%" y="757" width="0.5781%" height="15" fill="rgb(250,213,24)" fg:x="19" fg:w="118"/><text x="0.3431%" y="767.50"></text></g><g><title>AppKit`NSControlTrackMouse (118 samples, 0.58%)</title><rect x="0.0931%" y="741" width="0.5781%" height="15" fill="rgb(247,123,22)" fg:x="19" fg:w="118"/><text x="0.3431%" y="751.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (118 samples, 0.58%)</title><rect x="0.0931%" y="725" width="0.5781%" height="15" fill="rgb(231,138,38)" fg:x="19" fg:w="118"/><text x="0.3431%" y="735.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (117 samples, 0.57%)</title><rect x="0.0980%" y="709" width="0.5732%" height="15" fill="rgb(231,145,46)" fg:x="20" fg:w="117"/><text x="0.3480%" y="719.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (117 samples, 0.57%)</title><rect x="0.0980%" y="693" width="0.5732%" height="15" fill="rgb(251,118,11)" fg:x="20" fg:w="117"/><text x="0.3480%" y="703.50"></text></g><g><title>AppKit`_DPSNextEvent (117 samples, 0.57%)</title><rect x="0.0980%" y="677" width="0.5732%" height="15" fill="rgb(217,147,25)" fg:x="20" fg:w="117"/><text x="0.3480%" y="687.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (117 samples, 0.57%)</title><rect x="0.0980%" y="661" width="0.5732%" height="15" fill="rgb(247,81,37)" fg:x="20" fg:w="117"/><text x="0.3480%" y="671.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (117 samples, 0.57%)</title><rect x="0.0980%" y="645" width="0.5732%" height="15" fill="rgb(209,12,38)" fg:x="20" fg:w="117"/><text x="0.3480%" y="655.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (117 samples, 0.57%)</title><rect x="0.0980%" y="629" width="0.5732%" height="15" fill="rgb(227,1,9)" fg:x="20" fg:w="117"/><text x="0.3480%" y="639.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (117 samples, 0.57%)</title><rect x="0.0980%" y="613" width="0.5732%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="117"/><text x="0.3480%" y="623.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (117 samples, 0.57%)</title><rect x="0.0980%" y="597" width="0.5732%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="117"/><text x="0.3480%" y="607.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (117 samples, 0.57%)</title><rect x="0.0980%" y="581" width="0.5732%" height="15" fill="rgb(210,229,1)" fg:x="20" fg:w="117"/><text x="0.3480%" y="591.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (117 samples, 0.57%)</title><rect x="0.0980%" y="565" width="0.5732%" height="15" fill="rgb(222,148,37)" fg:x="20" fg:w="117"/><text x="0.3480%" y="575.50"></text></g><g><title>egui_example`winit::platform_impl::macos::observer::control_flow_end_handler (116 samples, 0.57%)</title><rect x="0.1029%" y="549" width="0.5683%" height="15" fill="rgb(234,67,33)" fg:x="21" fg:w="116"/><text x="0.3529%" y="559.50"></text></g><g><title>egui_example`winit::platform_impl::macos::app_state::ApplicationDelegate::cleared (116 samples, 0.57%)</title><rect x="0.1029%" y="533" width="0.5683%" height="15" fill="rgb(247,98,35)" fg:x="21" fg:w="116"/><text x="0.3529%" y="543.50"></text></g><g><title>egui_example`winit::platform_impl::macos::event_handler::EventHandler::handle_event (116 samples, 0.57%)</title><rect x="0.1029%" y="517" width="0.5683%" height="15" fill="rgb(247,138,52)" fg:x="21" fg:w="116"/><text x="0.3529%" y="527.50"></text></g><g><title>egui_example`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (116 samples, 0.57%)</title><rect x="0.1029%" y="501" width="0.5683%" height="15" fill="rgb(213,79,30)" fg:x="21" fg:w="116"/><text x="0.3529%" y="511.50"></text></g><g><title>egui_example`winit::event_loop::EventLoop&lt;T&gt;::run_app::_{{closure}} (116 samples, 0.57%)</title><rect x="0.1029%" y="485" width="0.5683%" height="15" fill="rgb(246,177,23)" fg:x="21" fg:w="116"/><text x="0.3529%" y="495.50"></text></g><g><title>egui_example`eframe::native::event_loop_context::with_event_loop_context (116 samples, 0.57%)</title><rect x="0.1029%" y="469" width="0.5683%" height="15" fill="rgb(230,62,27)" fg:x="21" fg:w="116"/><text x="0.3529%" y="479.50"></text></g><g><title>egui_example`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint (116 samples, 0.57%)</title><rect x="0.1029%" y="453" width="0.5683%" height="15" fill="rgb(216,154,8)" fg:x="21" fg:w="116"/><text x="0.3529%" y="463.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (131 samples, 0.64%)</title><rect x="0.0539%" y="885" width="0.6418%" height="15" fill="rgb(244,35,45)" fg:x="11" fg:w="131"/><text x="0.3039%" y="895.50"></text></g><g><title>egui_example`winit::platform_impl::macos::app::send_event (130 samples, 0.64%)</title><rect x="0.0588%" y="869" width="0.6369%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="130"/><text x="0.3088%" y="879.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (130 samples, 0.64%)</title><rect x="0.0588%" y="853" width="0.6369%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="130"/><text x="0.3088%" y="863.50"></text></g><g><title>AppKit`routeMouseMovedEvent (4 samples, 0.02%)</title><rect x="0.6761%" y="837" width="0.0196%" height="15" fill="rgb(233,84,52)" fg:x="138" fg:w="4"/><text x="0.9261%" y="847.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (3 samples, 0.01%)</title><rect x="0.6810%" y="821" width="0.0147%" height="15" fill="rgb(207,117,47)" fg:x="139" fg:w="3"/><text x="0.9310%" y="831.50"></text></g><g><title>egui_example`glow::native::Context::from_loader_function_cstr (3 samples, 0.01%)</title><rect x="0.7447%" y="517" width="0.0147%" height="15" fill="rgb(249,43,39)" fg:x="152" fg:w="3"/><text x="0.9947%" y="527.50"></text></g><g><title>egui_example`glow::gl46::struct_commands::GlFns::load_all_with_dyn (3 samples, 0.01%)</title><rect x="0.7447%" y="501" width="0.0147%" height="15" fill="rgb(209,38,44)" fg:x="152" fg:w="3"/><text x="0.9947%" y="511.50"></text></g><g><title>egui_example`glow::gl46::load_dyn_name_atomic_ptr (3 samples, 0.01%)</title><rect x="0.7447%" y="485" width="0.0147%" height="15" fill="rgb(236,212,23)" fg:x="152" fg:w="3"/><text x="0.9947%" y="495.50"></text></g><g><title>egui_example`glow::native::Context::from_loader_function_cstr::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7447%" y="469" width="0.0147%" height="15" fill="rgb(242,79,21)" fg:x="152" fg:w="3"/><text x="0.9947%" y="479.50"></text></g><g><title>egui_example`&lt;glutin::api::cgl::display::Display as glutin::display::GlDisplay&gt;::get_proc_address (3 samples, 0.01%)</title><rect x="0.7447%" y="453" width="0.0147%" height="15" fill="rgb(211,96,35)" fg:x="152" fg:w="3"/><text x="0.9947%" y="463.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldCreateDevice (3 samples, 0.01%)</title><rect x="0.7643%" y="341" width="0.0147%" height="15" fill="rgb(253,215,40)" fg:x="156" fg:w="3"/><text x="1.0143%" y="351.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDDeviceRec::initWithDisplayMask (3 samples, 0.01%)</title><rect x="0.7643%" y="325" width="0.0147%" height="15" fill="rgb(211,81,21)" fg:x="156" fg:w="3"/><text x="1.0143%" y="335.50"></text></g><g><title>OpenGL`0x00000001e6c23e24 (6 samples, 0.03%)</title><rect x="0.7594%" y="421" width="0.0294%" height="15" fill="rgb(208,190,38)" fg:x="155" fg:w="6"/><text x="1.0094%" y="431.50"></text></g><g><title>OpenGL`0x00000001e6c24070 (5 samples, 0.02%)</title><rect x="0.7643%" y="405" width="0.0245%" height="15" fill="rgb(235,213,38)" fg:x="156" fg:w="5"/><text x="1.0143%" y="415.50"></text></g><g><title>OpenGL`0x00000001e6c241ac (5 samples, 0.02%)</title><rect x="0.7643%" y="389" width="0.0245%" height="15" fill="rgb(237,122,38)" fg:x="156" fg:w="5"/><text x="1.0143%" y="399.50"></text></g><g><title>GLEngine`gliInitializeLibrary (5 samples, 0.02%)</title><rect x="0.7643%" y="373" width="0.0245%" height="15" fill="rgb(244,218,35)" fg:x="156" fg:w="5"/><text x="1.0143%" y="383.50"></text></g><g><title>libGFXShared.dylib`gfxInitializeLibrary (5 samples, 0.02%)</title><rect x="0.7643%" y="357" width="0.0245%" height="15" fill="rgb(240,68,47)" fg:x="156" fg:w="5"/><text x="1.0143%" y="367.50"></text></g><g><title>egui_example`&lt;glutin::display::Display as glutin::display::GlDisplay&gt;::find_configs (7 samples, 0.03%)</title><rect x="0.7594%" y="501" width="0.0343%" height="15" fill="rgb(210,16,53)" fg:x="155" fg:w="7"/><text x="1.0094%" y="511.50"></text></g><g><title>egui_example`glutin::api::cgl::config::_&lt;impl glutin::api::cgl::display::Display&gt;::find_configs (7 samples, 0.03%)</title><rect x="0.7594%" y="485" width="0.0343%" height="15" fill="rgb(235,124,12)" fg:x="155" fg:w="7"/><text x="1.0094%" y="495.50"></text></g><g><title>AppKit`-[NSOpenGLPixelFormat initWithAttributes:] (7 samples, 0.03%)</title><rect x="0.7594%" y="469" width="0.0343%" height="15" fill="rgb(224,169,11)" fg:x="155" fg:w="7"/><text x="1.0094%" y="479.50"></text></g><g><title>OpenGL`CGLChoosePixelFormat (7 samples, 0.03%)</title><rect x="0.7594%" y="453" width="0.0343%" height="15" fill="rgb(250,166,2)" fg:x="155" fg:w="7"/><text x="1.0094%" y="463.50"></text></g><g><title>OpenGL`0x00000001e6c2ac58 (7 samples, 0.03%)</title><rect x="0.7594%" y="437" width="0.0343%" height="15" fill="rgb(242,216,29)" fg:x="155" fg:w="7"/><text x="1.0094%" y="447.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (4 samples, 0.02%)</title><rect x="0.7986%" y="373" width="0.0196%" height="15" fill="rgb(230,116,27)" fg:x="163" fg:w="4"/><text x="1.0486%" y="383.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (3 samples, 0.01%)</title><rect x="0.8035%" y="357" width="0.0147%" height="15" fill="rgb(228,99,48)" fg:x="164" fg:w="3"/><text x="1.0535%" y="367.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (3 samples, 0.01%)</title><rect x="0.8035%" y="341" width="0.0147%" height="15" fill="rgb(253,11,6)" fg:x="164" fg:w="3"/><text x="1.0535%" y="351.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (3 samples, 0.01%)</title><rect x="0.8035%" y="325" width="0.0147%" height="15" fill="rgb(247,143,39)" fg:x="164" fg:w="3"/><text x="1.0535%" y="335.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (3 samples, 0.01%)</title><rect x="0.8035%" y="309" width="0.0147%" height="15" fill="rgb(236,97,10)" fg:x="164" fg:w="3"/><text x="1.0535%" y="319.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (3 samples, 0.01%)</title><rect x="0.8035%" y="293" width="0.0147%" height="15" fill="rgb(233,208,19)" fg:x="164" fg:w="3"/><text x="1.0535%" y="303.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (3 samples, 0.01%)</title><rect x="0.8035%" y="277" width="0.0147%" height="15" fill="rgb(216,164,2)" fg:x="164" fg:w="3"/><text x="1.0535%" y="287.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (3 samples, 0.01%)</title><rect x="0.8035%" y="261" width="0.0147%" height="15" fill="rgb(220,129,5)" fg:x="164" fg:w="3"/><text x="1.0535%" y="271.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (6 samples, 0.03%)</title><rect x="0.7986%" y="389" width="0.0294%" height="15" fill="rgb(242,17,10)" fg:x="163" fg:w="6"/><text x="1.0486%" y="399.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (9 samples, 0.04%)</title><rect x="0.7986%" y="405" width="0.0441%" height="15" fill="rgb(242,107,0)" fg:x="163" fg:w="9"/><text x="1.0486%" y="415.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (12 samples, 0.06%)</title><rect x="0.7937%" y="453" width="0.0588%" height="15" fill="rgb(251,28,31)" fg:x="162" fg:w="12"/><text x="1.0437%" y="463.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (12 samples, 0.06%)</title><rect x="0.7937%" y="437" width="0.0588%" height="15" fill="rgb(233,223,10)" fg:x="162" fg:w="12"/><text x="1.0437%" y="447.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (11 samples, 0.05%)</title><rect x="0.7986%" y="421" width="0.0539%" height="15" fill="rgb(215,21,27)" fg:x="163" fg:w="11"/><text x="1.0486%" y="431.50"></text></g><g><title>egui_example`winit::platform_impl::macos::app_state::ApplicationDelegate::dispatch_init_events (29 samples, 0.14%)</title><rect x="0.7153%" y="597" width="0.1421%" height="15" fill="rgb(232,23,21)" fg:x="146" fg:w="29"/><text x="0.9653%" y="607.50"></text></g><g><title>egui_example`winit::platform_impl::macos::event_handler::EventHandler::handle_event (29 samples, 0.14%)</title><rect x="0.7153%" y="581" width="0.1421%" height="15" fill="rgb(244,5,23)" fg:x="146" fg:w="29"/><text x="0.9653%" y="591.50"></text></g><g><title>egui_example`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (29 samples, 0.14%)</title><rect x="0.7153%" y="565" width="0.1421%" height="15" fill="rgb(226,81,46)" fg:x="146" fg:w="29"/><text x="0.9653%" y="575.50"></text></g><g><title>egui_example`winit::event_loop::EventLoop&lt;T&gt;::run_app::_{{closure}} (29 samples, 0.14%)</title><rect x="0.7153%" y="549" width="0.1421%" height="15" fill="rgb(247,70,30)" fg:x="146" fg:w="29"/><text x="0.9653%" y="559.50"></text></g><g><title>egui_example`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::resumed (29 samples, 0.14%)</title><rect x="0.7153%" y="533" width="0.1421%" height="15" fill="rgb(212,68,19)" fg:x="146" fg:w="29"/><text x="0.9653%" y="543.50"></text></g><g><title>egui_example`glutin_winit::DisplayBuilder::build (20 samples, 0.10%)</title><rect x="0.7594%" y="517" width="0.0980%" height="15" fill="rgb(240,187,13)" fg:x="155" fg:w="20"/><text x="1.0094%" y="527.50"></text></g><g><title>egui_example`&lt;winit::event_loop::ActiveEventLoop as glutin_winit::event_loop::GlutinEventLoop&gt;::create_window (13 samples, 0.06%)</title><rect x="0.7937%" y="501" width="0.0637%" height="15" fill="rgb(223,113,26)" fg:x="162" fg:w="13"/><text x="1.0437%" y="511.50"></text></g><g><title>egui_example`winit::platform_impl::macos::window::Window::new (13 samples, 0.06%)</title><rect x="0.7937%" y="485" width="0.0637%" height="15" fill="rgb(206,192,2)" fg:x="162" fg:w="13"/><text x="1.0437%" y="495.50"></text></g><g><title>egui_example`winit::platform_impl::macos::window_delegate::WindowDelegate::new (13 samples, 0.06%)</title><rect x="0.7937%" y="469" width="0.0637%" height="15" fill="rgb(241,108,4)" fg:x="162" fg:w="13"/><text x="1.0437%" y="479.50"></text></g><g><title>AppKit`WritingToolsUILibraryCore (5 samples, 0.02%)</title><rect x="0.8574%" y="485" width="0.0245%" height="15" fill="rgb(247,173,49)" fg:x="175" fg:w="5"/><text x="1.1074%" y="495.50"></text></g><g><title>SoftLinking`_sl_dlopen (5 samples, 0.02%)</title><rect x="0.8574%" y="469" width="0.0245%" height="15" fill="rgb(224,114,35)" fg:x="175" fg:w="5"/><text x="1.1074%" y="479.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (5 samples, 0.02%)</title><rect x="0.8574%" y="453" width="0.0245%" height="15" fill="rgb(245,159,27)" fg:x="175" fg:w="5"/><text x="1.1074%" y="463.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span (4 samples, 0.02%)</title><rect x="0.8623%" y="437" width="0.0196%" height="15" fill="rgb(245,172,44)" fg:x="176" fg:w="4"/><text x="1.1123%" y="447.50"></text></g><g><title>libobjc.A.dylib`map_images (4 samples, 0.02%)</title><rect x="0.8623%" y="421" width="0.0196%" height="15" fill="rgb(236,23,11)" fg:x="176" fg:w="4"/><text x="1.1123%" y="431.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (4 samples, 0.02%)</title><rect x="0.8623%" y="405" width="0.0196%" height="15" fill="rgb(205,117,38)" fg:x="176" fg:w="4"/><text x="1.1123%" y="415.50"></text></g><g><title>AppKit`-[NSApplication setMainMenu:] (6 samples, 0.03%)</title><rect x="0.8574%" y="581" width="0.0294%" height="15" fill="rgb(237,72,25)" fg:x="175" fg:w="6"/><text x="1.1074%" y="591.50"></text></g><g><title>AppKit`-[NSMenu _setMenuName:] (6 samples, 0.03%)</title><rect x="0.8574%" y="565" width="0.0294%" height="15" fill="rgb(244,70,9)" fg:x="175" fg:w="6"/><text x="1.1074%" y="575.50"></text></g><g><title>AppKit`-[NSApplication setMainMenu:] (6 samples, 0.03%)</title><rect x="0.8574%" y="549" width="0.0294%" height="15" fill="rgb(217,125,39)" fg:x="175" fg:w="6"/><text x="1.1074%" y="559.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _customizeMainMenu] (6 samples, 0.03%)</title><rect x="0.8574%" y="533" width="0.0294%" height="15" fill="rgb(235,36,10)" fg:x="175" fg:w="6"/><text x="1.1074%" y="543.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _addTextInputMenuItems:] (6 samples, 0.03%)</title><rect x="0.8574%" y="517" width="0.0294%" height="15" fill="rgb(251,123,47)" fg:x="175" fg:w="6"/><text x="1.1074%" y="527.50"></text></g><g><title>AppKit`+[NSTextView(NSTextView_WritingTools) _supportsWritingTools] (6 samples, 0.03%)</title><rect x="0.8574%" y="501" width="0.0294%" height="15" fill="rgb(221,13,13)" fg:x="175" fg:w="6"/><text x="1.1074%" y="511.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (38 samples, 0.19%)</title><rect x="0.7104%" y="853" width="0.1862%" height="15" fill="rgb(238,131,9)" fg:x="145" fg:w="38"/><text x="0.9604%" y="863.50"></text></g><g><title>AE`aeProcessAppleEvent (38 samples, 0.19%)</title><rect x="0.7104%" y="837" width="0.1862%" height="15" fill="rgb(211,50,8)" fg:x="145" fg:w="38"/><text x="0.9604%" y="847.50"></text></g><g><title>AE`0x00000001913caa2c (38 samples, 0.19%)</title><rect x="0.7104%" y="821" width="0.1862%" height="15" fill="rgb(245,182,24)" fg:x="145" fg:w="38"/><text x="0.9604%" y="831.50"></text></g><g><title>AE`0x00000001913caad8 (38 samples, 0.19%)</title><rect x="0.7104%" y="805" width="0.1862%" height="15" fill="rgb(242,14,37)" fg:x="145" fg:w="38"/><text x="0.9604%" y="815.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (38 samples, 0.19%)</title><rect x="0.7104%" y="789" width="0.1862%" height="15" fill="rgb(246,228,12)" fg:x="145" fg:w="38"/><text x="0.9604%" y="799.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (38 samples, 0.19%)</title><rect x="0.7104%" y="773" width="0.1862%" height="15" fill="rgb(213,55,15)" fg:x="145" fg:w="38"/><text x="0.9604%" y="783.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (38 samples, 0.19%)</title><rect x="0.7104%" y="757" width="0.1862%" height="15" fill="rgb(209,9,3)" fg:x="145" fg:w="38"/><text x="0.9604%" y="767.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (38 samples, 0.19%)</title><rect x="0.7104%" y="741" width="0.1862%" height="15" fill="rgb(230,59,30)" fg:x="145" fg:w="38"/><text x="0.9604%" y="751.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (38 samples, 0.19%)</title><rect x="0.7104%" y="725" width="0.1862%" height="15" fill="rgb(209,121,21)" fg:x="145" fg:w="38"/><text x="0.9604%" y="735.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (38 samples, 0.19%)</title><rect x="0.7104%" y="709" width="0.1862%" height="15" fill="rgb(220,109,13)" fg:x="145" fg:w="38"/><text x="0.9604%" y="719.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (38 samples, 0.19%)</title><rect x="0.7104%" y="693" width="0.1862%" height="15" fill="rgb(232,18,1)" fg:x="145" fg:w="38"/><text x="0.9604%" y="703.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (38 samples, 0.19%)</title><rect x="0.7104%" y="677" width="0.1862%" height="15" fill="rgb(215,41,42)" fg:x="145" fg:w="38"/><text x="0.9604%" y="687.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (38 samples, 0.19%)</title><rect x="0.7104%" y="661" width="0.1862%" height="15" fill="rgb(224,123,36)" fg:x="145" fg:w="38"/><text x="0.9604%" y="671.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (38 samples, 0.19%)</title><rect x="0.7104%" y="645" width="0.1862%" height="15" fill="rgb(240,125,3)" fg:x="145" fg:w="38"/><text x="0.9604%" y="655.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (38 samples, 0.19%)</title><rect x="0.7104%" y="629" width="0.1862%" height="15" fill="rgb(205,98,50)" fg:x="145" fg:w="38"/><text x="0.9604%" y="639.50"></text></g><g><title>egui_example`winit::platform_impl::macos::app_state::ApplicationDelegate::app_did_finish_launching (38 samples, 0.19%)</title><rect x="0.7104%" y="613" width="0.1862%" height="15" fill="rgb(205,185,37)" fg:x="145" fg:w="38"/><text x="0.9604%" y="623.50"></text></g><g><title>egui_example`winit::platform_impl::macos::menu::initialize (8 samples, 0.04%)</title><rect x="0.8574%" y="597" width="0.0392%" height="15" fill="rgb(238,207,15)" fg:x="175" fg:w="8"/><text x="1.1074%" y="607.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (5 samples, 0.02%)</title><rect x="0.9162%" y="709" width="0.0245%" height="15" fill="rgb(213,199,42)" fg:x="187" fg:w="5"/><text x="1.1662%" y="719.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (5 samples, 0.02%)</title><rect x="0.9162%" y="693" width="0.0245%" height="15" fill="rgb(235,201,11)" fg:x="187" fg:w="5"/><text x="1.1662%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (5 samples, 0.02%)</title><rect x="0.9162%" y="677" width="0.0245%" height="15" fill="rgb(207,46,11)" fg:x="187" fg:w="5"/><text x="1.1662%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (5 samples, 0.02%)</title><rect x="0.9162%" y="661" width="0.0245%" height="15" fill="rgb(241,35,35)" fg:x="187" fg:w="5"/><text x="1.1662%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.02%)</title><rect x="0.9162%" y="645" width="0.0245%" height="15" fill="rgb(243,32,47)" fg:x="187" fg:w="5"/><text x="1.1662%" y="655.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (8 samples, 0.04%)</title><rect x="0.9113%" y="789" width="0.0392%" height="15" fill="rgb(247,202,23)" fg:x="186" fg:w="8"/><text x="1.1613%" y="799.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (8 samples, 0.04%)</title><rect x="0.9113%" y="773" width="0.0392%" height="15" fill="rgb(219,102,11)" fg:x="186" fg:w="8"/><text x="1.1613%" y="783.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (8 samples, 0.04%)</title><rect x="0.9113%" y="757" width="0.0392%" height="15" fill="rgb(243,110,44)" fg:x="186" fg:w="8"/><text x="1.1613%" y="767.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (8 samples, 0.04%)</title><rect x="0.9113%" y="741" width="0.0392%" height="15" fill="rgb(222,74,54)" fg:x="186" fg:w="8"/><text x="1.1613%" y="751.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (8 samples, 0.04%)</title><rect x="0.9113%" y="725" width="0.0392%" height="15" fill="rgb(216,99,12)" fg:x="186" fg:w="8"/><text x="1.1613%" y="735.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (7 samples, 0.03%)</title><rect x="0.9505%" y="773" width="0.0343%" height="15" fill="rgb(226,22,26)" fg:x="194" fg:w="7"/><text x="1.2005%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (7 samples, 0.03%)</title><rect x="0.9505%" y="757" width="0.0343%" height="15" fill="rgb(217,163,10)" fg:x="194" fg:w="7"/><text x="1.2005%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (7 samples, 0.03%)</title><rect x="0.9505%" y="741" width="0.0343%" height="15" fill="rgb(213,25,53)" fg:x="194" fg:w="7"/><text x="1.2005%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (5 samples, 0.02%)</title><rect x="0.9603%" y="725" width="0.0245%" height="15" fill="rgb(252,105,26)" fg:x="196" fg:w="5"/><text x="1.2103%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (4 samples, 0.02%)</title><rect x="0.9652%" y="709" width="0.0196%" height="15" fill="rgb(220,39,43)" fg:x="197" fg:w="4"/><text x="1.2152%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (4 samples, 0.02%)</title><rect x="0.9652%" y="693" width="0.0196%" height="15" fill="rgb(229,68,48)" fg:x="197" fg:w="4"/><text x="1.2152%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.02%)</title><rect x="0.9652%" y="677" width="0.0196%" height="15" fill="rgb(252,8,32)" fg:x="197" fg:w="4"/><text x="1.2152%" y="687.50"></text></g><g><title>libapp_launch_measurement.dylib`__alm_execute_when_main_queue_idle_with_condition_block_invoke (3 samples, 0.01%)</title><rect x="0.9701%" y="661" width="0.0147%" height="15" fill="rgb(223,20,43)" fg:x="198" fg:w="3"/><text x="1.2201%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (3 samples, 0.01%)</title><rect x="0.9701%" y="645" width="0.0147%" height="15" fill="rgb(229,81,49)" fg:x="198" fg:w="3"/><text x="1.2201%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (3 samples, 0.01%)</title><rect x="0.9701%" y="629" width="0.0147%" height="15" fill="rgb(236,28,36)" fg:x="198" fg:w="3"/><text x="1.2201%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (3 samples, 0.01%)</title><rect x="0.9701%" y="613" width="0.0147%" height="15" fill="rgb(249,185,26)" fg:x="198" fg:w="3"/><text x="1.2201%" y="623.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (5 samples, 0.02%)</title><rect x="0.9848%" y="773" width="0.0245%" height="15" fill="rgb(249,174,33)" fg:x="201" fg:w="5"/><text x="1.2348%" y="783.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (5 samples, 0.02%)</title><rect x="0.9848%" y="757" width="0.0245%" height="15" fill="rgb(233,201,37)" fg:x="201" fg:w="5"/><text x="1.2348%" y="767.50"></text></g><g><title>ViewBridge`deferredBlockOpportunity_block_invoke_2 (3 samples, 0.01%)</title><rect x="0.9946%" y="741" width="0.0147%" height="15" fill="rgb(221,78,26)" fg:x="203" fg:w="3"/><text x="1.2446%" y="751.50"></text></g><g><title>ViewBridge`__wrapBlockWithVoucher_block_invoke (3 samples, 0.01%)</title><rect x="0.9946%" y="725" width="0.0147%" height="15" fill="rgb(250,127,30)" fg:x="203" fg:w="3"/><text x="1.2446%" y="735.50"></text></g><g><title>ViewBridge`__deferNSXPCInvocationOntoMainThread_block_invoke (3 samples, 0.01%)</title><rect x="0.9946%" y="709" width="0.0147%" height="15" fill="rgb(230,49,44)" fg:x="203" fg:w="3"/><text x="1.2446%" y="719.50"></text></g><g><title>CoreFoundation`-[NSInvocation invoke] (3 samples, 0.01%)</title><rect x="0.9946%" y="693" width="0.0147%" height="15" fill="rgb(229,67,23)" fg:x="203" fg:w="3"/><text x="1.2446%" y="703.50"></text></g><g><title>CoreFoundation`__invoking___ (3 samples, 0.01%)</title><rect x="0.9946%" y="677" width="0.0147%" height="15" fill="rgb(249,83,47)" fg:x="203" fg:w="3"/><text x="1.2446%" y="687.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (3 samples, 0.01%)</title><rect x="1.0142%" y="677" width="0.0147%" height="15" fill="rgb(215,43,3)" fg:x="207" fg:w="3"/><text x="1.2642%" y="687.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (4 samples, 0.02%)</title><rect x="1.0142%" y="709" width="0.0196%" height="15" fill="rgb(238,154,13)" fg:x="207" fg:w="4"/><text x="1.2642%" y="719.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (4 samples, 0.02%)</title><rect x="1.0142%" y="693" width="0.0196%" height="15" fill="rgb(219,56,2)" fg:x="207" fg:w="4"/><text x="1.2642%" y="703.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (6 samples, 0.03%)</title><rect x="1.0142%" y="725" width="0.0294%" height="15" fill="rgb(233,0,4)" fg:x="207" fg:w="6"/><text x="1.2642%" y="735.50"></text></g><g><title>AppKit`-[NSViewBackingLayer display] (4 samples, 0.02%)</title><rect x="1.0534%" y="661" width="0.0196%" height="15" fill="rgb(235,30,7)" fg:x="215" fg:w="4"/><text x="1.3034%" y="671.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (4 samples, 0.02%)</title><rect x="1.0534%" y="645" width="0.0196%" height="15" fill="rgb(250,79,13)" fg:x="215" fg:w="4"/><text x="1.3034%" y="655.50"></text></g><g><title>AppKit`__29-[NSViewBackingLayer display]_block_invoke (4 samples, 0.02%)</title><rect x="1.0534%" y="629" width="0.0196%" height="15" fill="rgb(211,146,34)" fg:x="215" fg:w="4"/><text x="1.3034%" y="639.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (4 samples, 0.02%)</title><rect x="1.0534%" y="613" width="0.0196%" height="15" fill="rgb(228,22,38)" fg:x="215" fg:w="4"/><text x="1.3034%" y="623.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (4 samples, 0.02%)</title><rect x="1.0534%" y="597" width="0.0196%" height="15" fill="rgb(235,168,5)" fg:x="215" fg:w="4"/><text x="1.3034%" y="607.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (4 samples, 0.02%)</title><rect x="1.0534%" y="581" width="0.0196%" height="15" fill="rgb(221,155,16)" fg:x="215" fg:w="4"/><text x="1.3034%" y="591.50"></text></g><g><title>CoreGraphics`RIPLayerBltImage (6 samples, 0.03%)</title><rect x="1.0779%" y="309" width="0.0294%" height="15" fill="rgb(215,215,53)" fg:x="220" fg:w="6"/><text x="1.3279%" y="319.50"></text></g><g><title>CoreGraphics`ripl_Mark (6 samples, 0.03%)</title><rect x="1.0779%" y="293" width="0.0294%" height="15" fill="rgb(223,4,10)" fg:x="220" fg:w="6"/><text x="1.3279%" y="303.50"></text></g><g><title>CoreGraphics`RGBAf16_image (6 samples, 0.03%)</title><rect x="1.0779%" y="277" width="0.0294%" height="15" fill="rgb(234,103,6)" fg:x="220" fg:w="6"/><text x="1.3279%" y="287.50"></text></g><g><title>CoreGraphics`RGBAf16_sample_RGBAf_inner(_ImgOp const*, long, long, int) (6 samples, 0.03%)</title><rect x="1.0779%" y="261" width="0.0294%" height="15" fill="rgb(227,97,0)" fg:x="220" fg:w="6"/><text x="1.3279%" y="271.50"></text></g><g><title>AppKit`-[NSImage drawAtPoint:fromRect:operation:fraction:] (8 samples, 0.04%)</title><rect x="1.0779%" y="453" width="0.0392%" height="15" fill="rgb(234,150,53)" fg:x="220" fg:w="8"/><text x="1.3279%" y="463.50"></text></g><g><title>AppKit`-[NSImage drawInRect:fromRect:operation:fraction:respectFlipped:hints:] (8 samples, 0.04%)</title><rect x="1.0779%" y="437" width="0.0392%" height="15" fill="rgb(228,201,54)" fg:x="220" fg:w="8"/><text x="1.3279%" y="447.50"></text></g><g><title>AppKit`-[NSImage _usingBestRepresentationForRect:context:hints:body:] (8 samples, 0.04%)</title><rect x="1.0779%" y="421" width="0.0392%" height="15" fill="rgb(222,22,37)" fg:x="220" fg:w="8"/><text x="1.3279%" y="431.50"></text></g><g><title>AppKit`__71-[NSImage drawInRect:fromRect:operation:fraction:respectFlipped:hints:]_block_invoke.1371 (8 samples, 0.04%)</title><rect x="1.0779%" y="405" width="0.0392%" height="15" fill="rgb(237,53,32)" fg:x="220" fg:w="8"/><text x="1.3279%" y="415.50"></text></g><g><title>AppKit`-[NSImageRep drawInRect:fromRect:operation:fraction:respectFlipped:hints:] (8 samples, 0.04%)</title><rect x="1.0779%" y="389" width="0.0392%" height="15" fill="rgb(233,25,53)" fg:x="220" fg:w="8"/><text x="1.3279%" y="399.50"></text></g><g><title>AppKit`__74-[NSImageRep drawInRect:fromRect:operation:fraction:respectFlipped:hints:]_block_invoke (8 samples, 0.04%)</title><rect x="1.0779%" y="373" width="0.0392%" height="15" fill="rgb(210,40,34)" fg:x="220" fg:w="8"/><text x="1.3279%" y="383.50"></text></g><g><title>CoreGraphics`CGContextDrawImage (8 samples, 0.04%)</title><rect x="1.0779%" y="357" width="0.0392%" height="15" fill="rgb(241,220,44)" fg:x="220" fg:w="8"/><text x="1.3279%" y="367.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (8 samples, 0.04%)</title><rect x="1.0779%" y="341" width="0.0392%" height="15" fill="rgb(235,28,35)" fg:x="220" fg:w="8"/><text x="1.3279%" y="351.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (8 samples, 0.04%)</title><rect x="1.0779%" y="325" width="0.0392%" height="15" fill="rgb(210,56,17)" fg:x="220" fg:w="8"/><text x="1.3279%" y="335.50"></text></g><g><title>AppKit`-[NSApplication _updateIconImageFromOriginal] (9 samples, 0.04%)</title><rect x="1.0779%" y="501" width="0.0441%" height="15" fill="rgb(224,130,29)" fg:x="220" fg:w="9"/><text x="1.3279%" y="511.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (9 samples, 0.04%)</title><rect x="1.0779%" y="485" width="0.0441%" height="15" fill="rgb(235,212,8)" fg:x="220" fg:w="9"/><text x="1.3279%" y="495.50"></text></g><g><title>AppKit`__45-[NSApplication _updateIconImageFromOriginal]_block_invoke (9 samples, 0.04%)</title><rect x="1.0779%" y="469" width="0.0441%" height="15" fill="rgb(223,33,50)" fg:x="220" fg:w="9"/><text x="1.3279%" y="479.50"></text></g><g><title>AppKit`-[NSApplication _setApplicationIconImage:setDockImage:] (10 samples, 0.05%)</title><rect x="1.0779%" y="517" width="0.0490%" height="15" fill="rgb(219,149,13)" fg:x="220" fg:w="10"/><text x="1.3279%" y="527.50"></text></g><g><title>vImage`AnyToAnyBlockInternal (3 samples, 0.01%)</title><rect x="1.1268%" y="53" width="0.0147%" height="15" fill="rgb(250,156,29)" fg:x="230" fg:w="3"/><text x="1.3768%" y="63.50"></text></g><g><title>vImage`vLookupTable_Planar16WithClipping (3 samples, 0.01%)</title><rect x="1.1268%" y="37" width="0.0147%" height="15" fill="rgb(216,193,19)" fg:x="230" fg:w="3"/><text x="1.3768%" y="47.50"></text></g><g><title>CoreGraphics`img_interpolate_read (4 samples, 0.02%)</title><rect x="1.1268%" y="229" width="0.0196%" height="15" fill="rgb(216,135,14)" fg:x="230" fg:w="4"/><text x="1.3768%" y="239.50"></text></g><g><title>CoreGraphics`img_raw_read (4 samples, 0.02%)</title><rect x="1.1268%" y="213" width="0.0196%" height="15" fill="rgb(241,47,5)" fg:x="230" fg:w="4"/><text x="1.3768%" y="223.50"></text></g><g><title>CoreGraphics`get_chunks_direct (4 samples, 0.02%)</title><rect x="1.1268%" y="197" width="0.0196%" height="15" fill="rgb(233,42,35)" fg:x="230" fg:w="4"/><text x="1.3768%" y="207.50"></text></g><g><title>CoreGraphics`CGDataProviderDirectGetBytesAtPositionInternal (4 samples, 0.02%)</title><rect x="1.1268%" y="181" width="0.0196%" height="15" fill="rgb(231,13,6)" fg:x="230" fg:w="4"/><text x="1.3768%" y="191.50"></text></g><g><title>CoreGraphics`provider_for_destination_get_bytes_at_position_inner (4 samples, 0.02%)</title><rect x="1.1268%" y="165" width="0.0196%" height="15" fill="rgb(207,181,40)" fg:x="230" fg:w="4"/><text x="1.3768%" y="175.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertUsingCMSConverter (4 samples, 0.02%)</title><rect x="1.1268%" y="149" width="0.0196%" height="15" fill="rgb(254,173,49)" fg:x="230" fg:w="4"/><text x="1.3768%" y="159.50"></text></g><g><title>CoreGraphics`convert_icc (4 samples, 0.02%)</title><rect x="1.1268%" y="133" width="0.0196%" height="15" fill="rgb(221,1,38)" fg:x="230" fg:w="4"/><text x="1.3768%" y="143.50"></text></g><g><title>CoreGraphics`convert_using_vImageConverter (4 samples, 0.02%)</title><rect x="1.1268%" y="117" width="0.0196%" height="15" fill="rgb(206,124,46)" fg:x="230" fg:w="4"/><text x="1.3768%" y="127.50"></text></g><g><title>CoreGraphics`vImageConverterConvert (4 samples, 0.02%)</title><rect x="1.1268%" y="101" width="0.0196%" height="15" fill="rgb(249,21,11)" fg:x="230" fg:w="4"/><text x="1.3768%" y="111.50"></text></g><g><title>CoreGraphics`vImageConverter_convert_internal (4 samples, 0.02%)</title><rect x="1.1268%" y="85" width="0.0196%" height="15" fill="rgb(222,201,40)" fg:x="230" fg:w="4"/><text x="1.3768%" y="95.50"></text></g><g><title>vImage`vImageConvert_AnyToAny (4 samples, 0.02%)</title><rect x="1.1268%" y="69" width="0.0196%" height="15" fill="rgb(235,61,29)" fg:x="230" fg:w="4"/><text x="1.3768%" y="79.50"></text></g><g><title>AppKit`-[NSDockTile display] (5 samples, 0.02%)</title><rect x="1.1268%" y="517" width="0.0245%" height="15" fill="rgb(219,207,3)" fg:x="230" fg:w="5"/><text x="1.3768%" y="527.50"></text></g><g><title>AppKit`-[NSView displayRectIgnoringOpacity:inContext:] (5 samples, 0.02%)</title><rect x="1.1268%" y="501" width="0.0245%" height="15" fill="rgb(222,56,46)" fg:x="230" fg:w="5"/><text x="1.3768%" y="511.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (5 samples, 0.02%)</title><rect x="1.1268%" y="485" width="0.0245%" height="15" fill="rgb(239,76,54)" fg:x="230" fg:w="5"/><text x="1.3768%" y="495.50"></text></g><g><title>AppKit`__47-[NSView displayRectIgnoringOpacity:inContext:]_block_invoke (5 samples, 0.02%)</title><rect x="1.1268%" y="469" width="0.0245%" height="15" fill="rgb(231,124,27)" fg:x="230" fg:w="5"/><text x="1.3768%" y="479.50"></text></g><g><title>AppKit`-[NSView _recursive:displayRectIgnoringOpacity:inContext:stopAtLayerBackedViews:] (5 samples, 0.02%)</title><rect x="1.1268%" y="453" width="0.0245%" height="15" fill="rgb(249,195,6)" fg:x="230" fg:w="5"/><text x="1.3768%" y="463.50"></text></g><g><title>AppKit`-[NSView _recursive:displayRectIgnoringOpacity:inContext:stopAtLayerBackedViews:] (5 samples, 0.02%)</title><rect x="1.1268%" y="437" width="0.0245%" height="15" fill="rgb(237,174,47)" fg:x="230" fg:w="5"/><text x="1.3768%" y="447.50"></text></g><g><title>AppKit`-[NSView _renderLayerInContext:] (5 samples, 0.02%)</title><rect x="1.1268%" y="421" width="0.0245%" height="15" fill="rgb(206,201,31)" fg:x="230" fg:w="5"/><text x="1.3768%" y="431.50"></text></g><g><title>QuartzCore`-[CALayer renderInContext:] (5 samples, 0.02%)</title><rect x="1.1268%" y="405" width="0.0245%" height="15" fill="rgb(231,57,52)" fg:x="230" fg:w="5"/><text x="1.3768%" y="415.50"></text></g><g><title>QuartzCore`-[CALayer _renderSublayersInContext:] (5 samples, 0.02%)</title><rect x="1.1268%" y="389" width="0.0245%" height="15" fill="rgb(248,177,22)" fg:x="230" fg:w="5"/><text x="1.3768%" y="399.50"></text></g><g><title>QuartzCore`-[CALayer renderInContext:] (5 samples, 0.02%)</title><rect x="1.1268%" y="373" width="0.0245%" height="15" fill="rgb(215,211,37)" fg:x="230" fg:w="5"/><text x="1.3768%" y="383.50"></text></g><g><title>AppKit`-[NSViewBackingLayer _renderForegroundInContext:] (5 samples, 0.02%)</title><rect x="1.1268%" y="357" width="0.0245%" height="15" fill="rgb(241,128,51)" fg:x="230" fg:w="5"/><text x="1.3768%" y="367.50"></text></g><g><title>QuartzCore`-[CALayer _renderForegroundInContext:] (5 samples, 0.02%)</title><rect x="1.1268%" y="341" width="0.0245%" height="15" fill="rgb(227,165,31)" fg:x="230" fg:w="5"/><text x="1.3768%" y="351.50"></text></g><g><title>CoreGraphics`CGContextDrawImage (5 samples, 0.02%)</title><rect x="1.1268%" y="325" width="0.0245%" height="15" fill="rgb(228,167,24)" fg:x="230" fg:w="5"/><text x="1.3768%" y="335.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (5 samples, 0.02%)</title><rect x="1.1268%" y="309" width="0.0245%" height="15" fill="rgb(228,143,12)" fg:x="230" fg:w="5"/><text x="1.3768%" y="319.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (5 samples, 0.02%)</title><rect x="1.1268%" y="293" width="0.0245%" height="15" fill="rgb(249,149,8)" fg:x="230" fg:w="5"/><text x="1.3768%" y="303.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (5 samples, 0.02%)</title><rect x="1.1268%" y="277" width="0.0245%" height="15" fill="rgb(243,35,44)" fg:x="230" fg:w="5"/><text x="1.3768%" y="287.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (5 samples, 0.02%)</title><rect x="1.1268%" y="261" width="0.0245%" height="15" fill="rgb(246,89,9)" fg:x="230" fg:w="5"/><text x="1.3768%" y="271.50"></text></g><g><title>CoreGraphics`img_data_lock (5 samples, 0.02%)</title><rect x="1.1268%" y="245" width="0.0245%" height="15" fill="rgb(233,213,13)" fg:x="230" fg:w="5"/><text x="1.3768%" y="255.50"></text></g><g><title>egui_example`eframe::native::app_icon::AppTitleIconSetter::update (17 samples, 0.08%)</title><rect x="1.0779%" y="533" width="0.0833%" height="15" fill="rgb(233,141,41)" fg:x="220" fg:w="17"/><text x="1.3279%" y="543.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeSpan::build (4 samples, 0.02%)</title><rect x="1.2444%" y="373" width="0.0196%" height="15" fill="rgb(239,167,4)" fg:x="254" fg:w="4"/><text x="1.4944%" y="383.50"></text></g><g><title>egui_example`cosmic_text::buffer_line::BufferLine::shape (5 samples, 0.02%)</title><rect x="1.2444%" y="405" width="0.0245%" height="15" fill="rgb(209,217,16)" fg:x="254" fg:w="5"/><text x="1.4944%" y="415.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeLine::build (5 samples, 0.02%)</title><rect x="1.2444%" y="389" width="0.0245%" height="15" fill="rgb(219,88,35)" fg:x="254" fg:w="5"/><text x="1.4944%" y="399.50"></text></g><g><title>egui_example`cosmic_text::buffer::Buffer::line_layout (6 samples, 0.03%)</title><rect x="1.2444%" y="437" width="0.0294%" height="15" fill="rgb(220,193,23)" fg:x="254" fg:w="6"/><text x="1.4944%" y="447.50"></text></g><g><title>egui_example`cosmic_text::buffer_line::BufferLine::layout (6 samples, 0.03%)</title><rect x="1.2444%" y="421" width="0.0294%" height="15" fill="rgb(230,90,52)" fg:x="254" fg:w="6"/><text x="1.4944%" y="431.50"></text></g><g><title>egui_example`ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw (23 samples, 0.11%)</title><rect x="1.1709%" y="485" width="0.1127%" height="15" fill="rgb(252,106,19)" fg:x="239" fg:w="23"/><text x="1.4209%" y="495.50"></text></g><g><title>egui_example`&lt;soft_ratatui::soft_backend::SoftBackend as ratatui::backend::Backend&gt;::draw (21 samples, 0.10%)</title><rect x="1.1807%" y="469" width="0.1029%" height="15" fill="rgb(206,74,20)" fg:x="241" fg:w="21"/><text x="1.4307%" y="479.50"></text></g><g><title>egui_example`soft_ratatui::soft_backend::SoftBackend::draw_cell (20 samples, 0.10%)</title><rect x="1.1856%" y="453" width="0.0980%" height="15" fill="rgb(230,138,44)" fg:x="242" fg:w="20"/><text x="1.4356%" y="463.50"></text></g><g><title>egui_example`&lt;egui_example::MyApp as eframe::epi::App&gt;::update (26 samples, 0.13%)</title><rect x="1.1611%" y="501" width="0.1274%" height="15" fill="rgb(235,182,43)" fg:x="237" fg:w="26"/><text x="1.4111%" y="511.50"></text></g><g><title>egui_example`eframe::native::epi_integration::EpiIntegration::update (29 samples, 0.14%)</title><rect x="1.1611%" y="533" width="0.1421%" height="15" fill="rgb(242,16,51)" fg:x="237" fg:w="29"/><text x="1.4111%" y="543.50"></text></g><g><title>egui_example`egui::context::Context::run (29 samples, 0.14%)</title><rect x="1.1611%" y="517" width="0.1421%" height="15" fill="rgb(248,9,4)" fg:x="237" fg:w="29"/><text x="1.4111%" y="527.50"></text></g><g><title>egui_example`egui_glow::painter::Painter::set_texture (4 samples, 0.02%)</title><rect x="1.3081%" y="517" width="0.0196%" height="15" fill="rgb(210,31,22)" fg:x="267" fg:w="4"/><text x="1.5581%" y="527.50"></text></g><g><title>egui_example`egui_glow::painter::Painter::paint_and_update_textures (7 samples, 0.03%)</title><rect x="1.3032%" y="533" width="0.0343%" height="15" fill="rgb(239,54,39)" fg:x="266" fg:w="7"/><text x="1.5532%" y="543.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (3 samples, 0.01%)</title><rect x="1.3375%" y="469" width="0.0147%" height="15" fill="rgb(230,99,41)" fg:x="273" fg:w="3"/><text x="1.5875%" y="479.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (3 samples, 0.01%)</title><rect x="1.3375%" y="453" width="0.0147%" height="15" fill="rgb(253,106,12)" fg:x="273" fg:w="3"/><text x="1.5875%" y="463.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (3 samples, 0.01%)</title><rect x="1.3375%" y="437" width="0.0147%" height="15" fill="rgb(213,46,41)" fg:x="273" fg:w="3"/><text x="1.5875%" y="447.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushContext (3 samples, 0.01%)</title><rect x="1.3375%" y="421" width="0.0147%" height="15" fill="rgb(215,133,35)" fg:x="273" fg:w="3"/><text x="1.5875%" y="431.50"></text></g><g><title>Metal`-[_MTLCommandQueue submitCommandBuffer:] (3 samples, 0.01%)</title><rect x="1.3375%" y="405" width="0.0147%" height="15" fill="rgb(213,28,5)" fg:x="273" fg:w="3"/><text x="1.5875%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (3 samples, 0.01%)</title><rect x="1.3375%" y="389" width="0.0147%" height="15" fill="rgb(215,77,49)" fg:x="273" fg:w="3"/><text x="1.5875%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="1.3375%" y="373" width="0.0147%" height="15" fill="rgb(248,100,22)" fg:x="273" fg:w="3"/><text x="1.5875%" y="383.50"></text></g><g><title>Metal`__40-[_MTLCommandQueue submitCommandBuffer:]_block_invoke (3 samples, 0.01%)</title><rect x="1.3375%" y="357" width="0.0147%" height="15" fill="rgb(208,67,9)" fg:x="273" fg:w="3"/><text x="1.5875%" y="367.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (3 samples, 0.01%)</title><rect x="1.3375%" y="341" width="0.0147%" height="15" fill="rgb(219,133,21)" fg:x="273" fg:w="3"/><text x="1.5875%" y="351.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (3 samples, 0.01%)</title><rect x="1.3375%" y="325" width="0.0147%" height="15" fill="rgb(246,46,29)" fg:x="273" fg:w="3"/><text x="1.5875%" y="335.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (3 samples, 0.01%)</title><rect x="1.3375%" y="309" width="0.0147%" height="15" fill="rgb(246,185,52)" fg:x="273" fg:w="3"/><text x="1.5875%" y="319.50"></text></g><g><title>IOKit`iokit_user_client_trap (3 samples, 0.01%)</title><rect x="1.3375%" y="293" width="0.0147%" height="15" fill="rgb(252,136,11)" fg:x="273" fg:w="3"/><text x="1.5875%" y="303.50"></text></g><g><title>AppKit`-[_NSOpenGLViewBackingLayer display] (60 samples, 0.29%)</title><rect x="1.0730%" y="661" width="0.2940%" height="15" fill="rgb(219,138,53)" fg:x="219" fg:w="60"/><text x="1.3230%" y="671.50"></text></g><g><title>egui_example`winit::platform_impl::macos::view::WinitView::draw_rect (60 samples, 0.29%)</title><rect x="1.0730%" y="645" width="0.2940%" height="15" fill="rgb(211,51,23)" fg:x="219" fg:w="60"/><text x="1.3230%" y="655.50"></text></g><g><title>egui_example`winit::platform_impl::macos::app_state::ApplicationDelegate::handle_redraw (60 samples, 0.29%)</title><rect x="1.0730%" y="629" width="0.2940%" height="15" fill="rgb(247,221,28)" fg:x="219" fg:w="60"/><text x="1.3230%" y="639.50"></text></g><g><title>egui_example`winit::platform_impl::macos::event_handler::EventHandler::handle_event (60 samples, 0.29%)</title><rect x="1.0730%" y="613" width="0.2940%" height="15" fill="rgb(251,222,45)" fg:x="219" fg:w="60"/><text x="1.3230%" y="623.50"></text></g><g><title>egui_example`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (60 samples, 0.29%)</title><rect x="1.0730%" y="597" width="0.2940%" height="15" fill="rgb(217,162,53)" fg:x="219" fg:w="60"/><text x="1.3230%" y="607.50"></text></g><g><title>egui_example`winit::event_loop::EventLoop&lt;T&gt;::run_app::_{{closure}} (60 samples, 0.29%)</title><rect x="1.0730%" y="581" width="0.2940%" height="15" fill="rgb(229,93,14)" fg:x="219" fg:w="60"/><text x="1.3230%" y="591.50"></text></g><g><title>egui_example`eframe::native::event_loop_context::with_event_loop_context (60 samples, 0.29%)</title><rect x="1.0730%" y="565" width="0.2940%" height="15" fill="rgb(209,67,49)" fg:x="219" fg:w="60"/><text x="1.3230%" y="575.50"></text></g><g><title>egui_example`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint (60 samples, 0.29%)</title><rect x="1.0730%" y="549" width="0.2940%" height="15" fill="rgb(213,87,29)" fg:x="219" fg:w="60"/><text x="1.3230%" y="559.50"></text></g><g><title>egui_example`glutin::api::cgl::context::ContextInner::flush_buffer (6 samples, 0.03%)</title><rect x="1.3375%" y="533" width="0.0294%" height="15" fill="rgb(205,151,52)" fg:x="273" fg:w="6"/><text x="1.5875%" y="543.50"></text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (6 samples, 0.03%)</title><rect x="1.3375%" y="517" width="0.0294%" height="15" fill="rgb(253,215,39)" fg:x="273" fg:w="6"/><text x="1.5875%" y="527.50"></text></g><g><title>OpenGL`CGLFlushDrawable (6 samples, 0.03%)</title><rect x="1.3375%" y="501" width="0.0294%" height="15" fill="rgb(221,220,41)" fg:x="273" fg:w="6"/><text x="1.5875%" y="511.50"></text></g><g><title>GLEngine`glSwap_Exec (6 samples, 0.03%)</title><rect x="1.3375%" y="485" width="0.0294%" height="15" fill="rgb(218,133,21)" fg:x="273" fg:w="6"/><text x="1.5875%" y="495.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldPresentFramebufferData (3 samples, 0.01%)</title><rect x="1.3522%" y="469" width="0.0147%" height="15" fill="rgb(221,193,43)" fg:x="276" fg:w="3"/><text x="1.6022%" y="479.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushContext (3 samples, 0.01%)</title><rect x="1.3522%" y="453" width="0.0147%" height="15" fill="rgb(240,128,52)" fg:x="276" fg:w="3"/><text x="1.6022%" y="463.50"></text></g><g><title>Metal`-[_MTLCommandQueue submitCommandBuffer:] (3 samples, 0.01%)</title><rect x="1.3522%" y="437" width="0.0147%" height="15" fill="rgb(253,114,12)" fg:x="276" fg:w="3"/><text x="1.6022%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (3 samples, 0.01%)</title><rect x="1.3522%" y="421" width="0.0147%" height="15" fill="rgb(215,223,47)" fg:x="276" fg:w="3"/><text x="1.6022%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="1.3522%" y="405" width="0.0147%" height="15" fill="rgb(248,225,23)" fg:x="276" fg:w="3"/><text x="1.6022%" y="415.50"></text></g><g><title>Metal`__40-[_MTLCommandQueue submitCommandBuffer:]_block_invoke (3 samples, 0.01%)</title><rect x="1.3522%" y="389" width="0.0147%" height="15" fill="rgb(250,108,0)" fg:x="276" fg:w="3"/><text x="1.6022%" y="399.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (3 samples, 0.01%)</title><rect x="1.3522%" y="373" width="0.0147%" height="15" fill="rgb(228,208,7)" fg:x="276" fg:w="3"/><text x="1.6022%" y="383.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (3 samples, 0.01%)</title><rect x="1.3522%" y="357" width="0.0147%" height="15" fill="rgb(244,45,10)" fg:x="276" fg:w="3"/><text x="1.6022%" y="367.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (3 samples, 0.01%)</title><rect x="1.3522%" y="341" width="0.0147%" height="15" fill="rgb(207,125,25)" fg:x="276" fg:w="3"/><text x="1.6022%" y="351.50"></text></g><g><title>IOKit`iokit_user_client_trap (3 samples, 0.01%)</title><rect x="1.3522%" y="325" width="0.0147%" height="15" fill="rgb(210,195,18)" fg:x="276" fg:w="3"/><text x="1.6022%" y="335.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (68 samples, 0.33%)</title><rect x="1.0485%" y="677" width="0.3332%" height="15" fill="rgb(249,80,12)" fg:x="214" fg:w="68"/><text x="1.2985%" y="687.50"></text></g><g><title>AppKit`0x000000018de30f08 (3 samples, 0.01%)</title><rect x="1.3669%" y="661" width="0.0147%" height="15" fill="rgb(221,65,9)" fg:x="279" fg:w="3"/><text x="1.6169%" y="671.50"></text></g><g><title>AppKit`0x000000018dd24408 (3 samples, 0.01%)</title><rect x="1.3669%" y="645" width="0.0147%" height="15" fill="rgb(235,49,36)" fg:x="279" fg:w="3"/><text x="1.6169%" y="655.50"></text></g><g><title>AppKit`0x000000018de31694 (3 samples, 0.01%)</title><rect x="1.3669%" y="629" width="0.0147%" height="15" fill="rgb(225,32,20)" fg:x="279" fg:w="3"/><text x="1.6169%" y="639.50"></text></g><g><title>AppKit`0x000000018de30938 (3 samples, 0.01%)</title><rect x="1.3669%" y="613" width="0.0147%" height="15" fill="rgb(215,141,46)" fg:x="279" fg:w="3"/><text x="1.6169%" y="623.50"></text></g><g><title>QuartzCore`-[CALayer _display] (3 samples, 0.01%)</title><rect x="1.3669%" y="597" width="0.0147%" height="15" fill="rgb(250,160,47)" fg:x="279" fg:w="3"/><text x="1.6169%" y="607.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (73 samples, 0.36%)</title><rect x="1.0436%" y="693" width="0.3577%" height="15" fill="rgb(216,222,40)" fg:x="213" fg:w="73"/><text x="1.2936%" y="703.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (81 samples, 0.40%)</title><rect x="1.0142%" y="741" width="0.3968%" height="15" fill="rgb(234,217,39)" fg:x="207" fg:w="81"/><text x="1.2642%" y="751.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (75 samples, 0.37%)</title><rect x="1.0436%" y="725" width="0.3674%" height="15" fill="rgb(207,178,40)" fg:x="213" fg:w="75"/><text x="1.2936%" y="735.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (75 samples, 0.37%)</title><rect x="1.0436%" y="709" width="0.3674%" height="15" fill="rgb(221,136,13)" fg:x="213" fg:w="75"/><text x="1.2936%" y="719.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;epaint::textures::TexturesDelta&gt; (106 samples, 0.52%)</title><rect x="1.4355%" y="629" width="0.5193%" height="15" fill="rgb(249,199,10)" fg:x="293" fg:w="106"/><text x="1.6855%" y="639.50"></text></g><g><title>egui_example`alloc::sync::Arc&lt;T,A&gt;::drop_slow (106 samples, 0.52%)</title><rect x="1.4355%" y="613" width="0.5193%" height="15" fill="rgb(249,222,13)" fg:x="293" fg:w="106"/><text x="1.6855%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (106 samples, 0.52%)</title><rect x="1.4355%" y="597" width="0.5193%" height="15" fill="rgb(244,185,38)" fg:x="293" fg:w="106"/><text x="1.6855%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`madvise (106 samples, 0.52%)</title><rect x="1.4355%" y="581" width="0.5193%" height="15" fill="rgb(236,202,9)" fg:x="293" fg:w="106"/><text x="1.6855%" y="591.50"></text></g><g><title>egui_example`core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.01%)</title><rect x="1.9646%" y="549" width="0.0147%" height="15" fill="rgb(250,229,37)" fg:x="401" fg:w="3"/><text x="2.2146%" y="559.50"></text></g><g><title>egui_example`egui::containers::panel::CentralPanel::show_dyn (4 samples, 0.02%)</title><rect x="1.9646%" y="581" width="0.0196%" height="15" fill="rgb(206,174,23)" fg:x="401" fg:w="4"/><text x="2.2146%" y="591.50"></text></g><g><title>egui_example`egui::containers::frame::Frame::show_dyn (4 samples, 0.02%)</title><rect x="1.9646%" y="565" width="0.0196%" height="15" fill="rgb(211,33,43)" fg:x="401" fg:w="4"/><text x="2.2146%" y="575.50"></text></g><g><title>egui_example`epaint::image::ColorImage::from_rgb (1,611 samples, 7.89%)</title><rect x="1.9842%" y="581" width="7.8928%" height="15" fill="rgb(245,58,50)" fg:x="405" fg:w="1611"/><text x="2.2342%" y="591.50">egui_exampl..</text></g><g><title>egui_example`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,611 samples, 7.89%)</title><rect x="1.9842%" y="565" width="7.8928%" height="15" fill="rgb(244,68,36)" fg:x="405" fg:w="1611"/><text x="2.2342%" y="575.50">egui_exampl..</text></g><g><title>egui_example`&lt;ratatui::text::text::Text as ratatui::widgets::Widget&gt;::render (3 samples, 0.01%)</title><rect x="9.9995%" y="549" width="0.0147%" height="15" fill="rgb(232,229,15)" fg:x="2041" fg:w="3"/><text x="10.2495%" y="559.50"></text></g><g><title>egui_example`&lt;ratatui::text::text::Text as ratatui::widgets::WidgetRef&gt;::render_ref (3 samples, 0.01%)</title><rect x="9.9995%" y="533" width="0.0147%" height="15" fill="rgb(254,30,23)" fg:x="2041" fg:w="3"/><text x="10.2495%" y="543.50"></text></g><g><title>egui_example`DYLD-STUB$$memcpy (14 samples, 0.07%)</title><rect x="10.0142%" y="549" width="0.0686%" height="15" fill="rgb(235,160,14)" fg:x="2044" fg:w="14"/><text x="10.2642%" y="559.50"></text></g><g><title>egui_example`ratatui::buffer::buffer::Buffer::index_of (35 samples, 0.17%)</title><rect x="10.0926%" y="549" width="0.1715%" height="15" fill="rgb(212,155,44)" fg:x="2060" fg:w="35"/><text x="10.3426%" y="559.50"></text></g><g><title>egui_example`ratatui::buffer::cell::Cell::set_char (169 samples, 0.83%)</title><rect x="10.2641%" y="549" width="0.8280%" height="15" fill="rgb(226,2,50)" fg:x="2095" fg:w="169"/><text x="10.5141%" y="559.50"></text></g><g><title>egui_example`&lt;&amp;mut egui_example::App as ratatui::widgets::Widget&gt;::render (271 samples, 1.33%)</title><rect x="9.8770%" y="565" width="1.3277%" height="15" fill="rgb(234,177,6)" fg:x="2016" fg:w="271"/><text x="10.1270%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.11%)</title><rect x="11.0921%" y="549" width="0.1127%" height="15" fill="rgb(217,24,9)" fg:x="2264" fg:w="23"/><text x="11.3421%" y="559.50"></text></g><g><title>egui_example`&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="11.3027%" y="549" width="0.0441%" height="15" fill="rgb(220,13,46)" fg:x="2307" fg:w="9"/><text x="11.5527%" y="559.50"></text></g><g><title>egui_example`&lt;cosmic_text::buffer::LayoutRunIter as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 0.46%)</title><rect x="11.3468%" y="549" width="0.4556%" height="15" fill="rgb(239,221,27)" fg:x="2316" fg:w="93"/><text x="11.5968%" y="559.50"></text></g><g><title>egui_example`DYLD-STUB$$free (39 samples, 0.19%)</title><rect x="11.8025%" y="549" width="0.1911%" height="15" fill="rgb(222,198,25)" fg:x="2409" fg:w="39"/><text x="12.0525%" y="559.50"></text></g><g><title>egui_example`DYLD-STUB$$malloc (9 samples, 0.04%)</title><rect x="11.9935%" y="549" width="0.0441%" height="15" fill="rgb(211,99,13)" fg:x="2448" fg:w="9"/><text x="12.2435%" y="559.50"></text></g><g><title>egui_example`DYLD-STUB$$memcpy (4 samples, 0.02%)</title><rect x="12.0376%" y="549" width="0.0196%" height="15" fill="rgb(232,111,31)" fg:x="2457" fg:w="4"/><text x="12.2876%" y="559.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (20 samples, 0.10%)</title><rect x="12.0572%" y="549" width="0.0980%" height="15" fill="rgb(245,82,37)" fg:x="2461" fg:w="20"/><text x="12.3072%" y="559.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc13___rdl_dealloc (3 samples, 0.01%)</title><rect x="12.1552%" y="549" width="0.0147%" height="15" fill="rgb(227,149,46)" fg:x="2481" fg:w="3"/><text x="12.4052%" y="559.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsList::new (3 samples, 0.01%)</title><rect x="12.1699%" y="549" width="0.0147%" height="15" fill="rgb(218,36,50)" fg:x="2484" fg:w="3"/><text x="12.4199%" y="559.50"></text></g><g><title>egui_example`cosmic_text::buffer::Buffer::line_layout (29 samples, 0.14%)</title><rect x="12.1846%" y="549" width="0.1421%" height="15" fill="rgb(226,80,48)" fg:x="2487" fg:w="29"/><text x="12.4346%" y="559.50"></text></g><g><title>egui_example`cosmic_text::layout::LayoutGlyph::physical (53 samples, 0.26%)</title><rect x="12.3267%" y="549" width="0.2597%" height="15" fill="rgb(238,224,15)" fg:x="2516" fg:w="53"/><text x="12.5767%" y="559.50"></text></g><g><title>egui_example`cosmic_text::swash::SwashCache::get_image (8 samples, 0.04%)</title><rect x="12.5864%" y="549" width="0.0392%" height="15" fill="rgb(241,136,10)" fg:x="2569" fg:w="8"/><text x="12.8364%" y="559.50"></text></g><g><title>egui_example`ratatui::buffer::buffer::Buffer::index_of (35 samples, 0.17%)</title><rect x="12.6255%" y="549" width="0.1715%" height="15" fill="rgb(208,32,45)" fg:x="2577" fg:w="35"/><text x="12.8755%" y="559.50"></text></g><g><title>egui_example`ratatui::buffer::buffer::Buffer::index_of_opt (24 samples, 0.12%)</title><rect x="12.7970%" y="549" width="0.1176%" height="15" fill="rgb(207,135,9)" fg:x="2612" fg:w="24"/><text x="13.0470%" y="559.50"></text></g><g><title>egui_example`ratatui::buffer::cell::Cell::symbol (27 samples, 0.13%)</title><rect x="12.9146%" y="549" width="0.1323%" height="15" fill="rgb(206,86,44)" fg:x="2636" fg:w="27"/><text x="13.1646%" y="559.50"></text></g><g><title>egui_example`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="40.5468%" y="533" width="0.0196%" height="15" fill="rgb(245,177,15)" fg:x="8276" fg:w="4"/><text x="40.7968%" y="543.50"></text></g><g><title>egui_example`&lt;alloc::string::String as core::clone::Clone&gt;::clone (57 samples, 0.28%)</title><rect x="40.5664%" y="533" width="0.2793%" height="15" fill="rgb(206,64,50)" fg:x="8280" fg:w="57"/><text x="40.8164%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (37 samples, 0.18%)</title><rect x="40.6643%" y="517" width="0.1813%" height="15" fill="rgb(234,36,40)" fg:x="8300" fg:w="37"/><text x="40.9143%" y="527.50"></text></g><g><title>egui_example`DYLD-STUB$$free (49 samples, 0.24%)</title><rect x="40.8456%" y="533" width="0.2401%" height="15" fill="rgb(213,64,8)" fg:x="8337" fg:w="49"/><text x="41.0956%" y="543.50"></text></g><g><title>egui_example`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="41.0857%" y="533" width="0.0147%" height="15" fill="rgb(210,75,36)" fg:x="8386" fg:w="3"/><text x="41.3357%" y="543.50"></text></g><g><title>egui_example`DYLD-STUB$$memcpy (3 samples, 0.01%)</title><rect x="41.1004%" y="533" width="0.0147%" height="15" fill="rgb(229,88,21)" fg:x="8389" fg:w="3"/><text x="41.3504%" y="543.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (7 samples, 0.03%)</title><rect x="41.1151%" y="533" width="0.0343%" height="15" fill="rgb(252,204,47)" fg:x="8392" fg:w="7"/><text x="41.3651%" y="543.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc13___rdl_dealloc (8 samples, 0.04%)</title><rect x="41.1494%" y="533" width="0.0392%" height="15" fill="rgb(208,77,27)" fg:x="8399" fg:w="8"/><text x="41.3994%" y="543.50"></text></g><g><title>egui_example`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.31%)</title><rect x="41.2180%" y="517" width="0.3087%" height="15" fill="rgb(221,76,26)" fg:x="8413" fg:w="63"/><text x="41.4680%" y="527.50"></text></g><g><title>egui_example`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (38 samples, 0.19%)</title><rect x="41.3405%" y="501" width="0.1862%" height="15" fill="rgb(225,139,18)" fg:x="8438" fg:w="38"/><text x="41.5905%" y="511.50"></text></g><g><title>egui_example`DYLD-STUB$$free (28 samples, 0.14%)</title><rect x="41.5266%" y="517" width="0.1372%" height="15" fill="rgb(230,137,11)" fg:x="8476" fg:w="28"/><text x="41.7766%" y="527.50"></text></g><g><title>egui_example`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (9 samples, 0.04%)</title><rect x="41.6736%" y="517" width="0.0441%" height="15" fill="rgb(212,28,1)" fg:x="8506" fg:w="9"/><text x="41.9236%" y="527.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::attrs::AttrsList&gt; (11 samples, 0.05%)</title><rect x="41.7177%" y="517" width="0.0539%" height="15" fill="rgb(248,164,17)" fg:x="8515" fg:w="11"/><text x="41.9677%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (3 samples, 0.01%)</title><rect x="41.9284%" y="501" width="0.0147%" height="15" fill="rgb(222,171,42)" fg:x="8558" fg:w="3"/><text x="42.1784%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (7 samples, 0.03%)</title><rect x="41.9431%" y="501" width="0.0343%" height="15" fill="rgb(243,84,45)" fg:x="8561" fg:w="7"/><text x="42.1931%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (63 samples, 0.31%)</title><rect x="41.9774%" y="501" width="0.3087%" height="15" fill="rgb(252,49,23)" fg:x="8568" fg:w="63"/><text x="42.2274%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (16 samples, 0.08%)</title><rect x="42.2860%" y="501" width="0.0784%" height="15" fill="rgb(215,19,7)" fg:x="8631" fg:w="16"/><text x="42.5360%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (15 samples, 0.07%)</title><rect x="42.8005%" y="485" width="0.0735%" height="15" fill="rgb(238,81,41)" fg:x="8736" fg:w="15"/><text x="43.0505%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (49 samples, 0.24%)</title><rect x="43.3002%" y="469" width="0.2401%" height="15" fill="rgb(210,199,37)" fg:x="8838" fg:w="49"/><text x="43.5502%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (265 samples, 1.30%)</title><rect x="42.3644%" y="501" width="1.2983%" height="15" fill="rgb(244,192,49)" fg:x="8647" fg:w="265"/><text x="42.6144%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (161 samples, 0.79%)</title><rect x="42.8739%" y="485" width="0.7888%" height="15" fill="rgb(226,211,11)" fg:x="8751" fg:w="161"/><text x="43.1239%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (25 samples, 0.12%)</title><rect x="43.5402%" y="469" width="0.1225%" height="15" fill="rgb(236,162,54)" fg:x="8887" fg:w="25"/><text x="43.7902%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.04%)</title><rect x="43.6627%" y="501" width="0.0392%" height="15" fill="rgb(220,229,9)" fg:x="8912" fg:w="8"/><text x="43.9127%" y="511.50"></text></g><g><title>libsystem_platform.dylib`__bzero (8 samples, 0.04%)</title><rect x="43.7019%" y="501" width="0.0392%" height="15" fill="rgb(250,87,22)" fg:x="8920" fg:w="8"/><text x="43.9519%" y="511.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::cached::Cached&lt;cosmic_text::shape::ShapeLine&gt;&gt; (448 samples, 2.19%)</title><rect x="41.7716%" y="517" width="2.1949%" height="15" fill="rgb(239,43,17)" fg:x="8526" fg:w="448"/><text x="42.0216%" y="527.50">e..</text></g><g><title>libsystem_platform.dylib`_platform_memset (46 samples, 0.23%)</title><rect x="43.7411%" y="501" width="0.2254%" height="15" fill="rgb(231,177,25)" fg:x="8928" fg:w="46"/><text x="43.9911%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_free (53 samples, 0.26%)</title><rect x="43.9763%" y="517" width="0.2597%" height="15" fill="rgb(219,179,1)" fg:x="8976" fg:w="53"/><text x="44.2263%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (133 samples, 0.65%)</title><rect x="44.2360%" y="517" width="0.6516%" height="15" fill="rgb(238,219,53)" fg:x="9029" fg:w="133"/><text x="44.4860%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (10 samples, 0.05%)</title><rect x="44.8876%" y="517" width="0.0490%" height="15" fill="rgb(232,167,36)" fg:x="9162" fg:w="10"/><text x="45.1376%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.01%)</title><rect x="44.9366%" y="517" width="0.0147%" height="15" fill="rgb(244,19,51)" fg:x="9172" fg:w="3"/><text x="45.1866%" y="527.50"></text></g><g><title>libsystem_platform.dylib`__bzero (10 samples, 0.05%)</title><rect x="44.9513%" y="517" width="0.0490%" height="15" fill="rgb(224,6,22)" fg:x="9175" fg:w="10"/><text x="45.2013%" y="527.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::buffer_line::BufferLine&gt; (788 samples, 3.86%)</title><rect x="41.1935%" y="533" width="3.8607%" height="15" fill="rgb(224,145,5)" fg:x="8408" fg:w="788"/><text x="41.4435%" y="543.50">egui..</text></g><g><title>libsystem_platform.dylib`_platform_memset (11 samples, 0.05%)</title><rect x="45.0002%" y="517" width="0.0539%" height="15" fill="rgb(234,130,49)" fg:x="9185" fg:w="11"/><text x="45.2502%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (63 samples, 0.31%)</title><rect x="45.1325%" y="517" width="0.3087%" height="15" fill="rgb(254,6,2)" fg:x="9212" fg:w="63"/><text x="45.3825%" y="527.50"></text></g><g><title>libsystem_platform.dylib`__bzero (4 samples, 0.02%)</title><rect x="45.4412%" y="517" width="0.0196%" height="15" fill="rgb(208,96,46)" fg:x="9275" fg:w="4"/><text x="45.6912%" y="527.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::cached::Cached&lt;alloc::vec::Vec&lt;cosmic_text::layout::LayoutLine&gt;&gt;&gt; (88 samples, 0.43%)</title><rect x="45.0541%" y="533" width="0.4311%" height="15" fill="rgb(239,3,39)" fg:x="9196" fg:w="88"/><text x="45.3041%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.02%)</title><rect x="45.4608%" y="517" width="0.0245%" height="15" fill="rgb(233,210,1)" fg:x="9279" fg:w="5"/><text x="45.7108%" y="527.50"></text></g><g><title>egui_example`DYLD-STUB$$memcpy (4 samples, 0.02%)</title><rect x="45.4951%" y="517" width="0.0196%" height="15" fill="rgb(244,137,37)" fg:x="9286" fg:w="4"/><text x="45.7451%" y="527.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsOwned::new (50 samples, 0.24%)</title><rect x="45.5147%" y="517" width="0.2450%" height="15" fill="rgb(240,136,2)" fg:x="9290" fg:w="50"/><text x="45.7647%" y="527.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsList::new (64 samples, 0.31%)</title><rect x="45.4951%" y="533" width="0.3136%" height="15" fill="rgb(239,18,37)" fg:x="9286" fg:w="64"/><text x="45.7451%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.05%)</title><rect x="45.7596%" y="517" width="0.0490%" height="15" fill="rgb(218,185,22)" fg:x="9340" fg:w="10"/><text x="46.0096%" y="527.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsOwned::new (16 samples, 0.08%)</title><rect x="45.8086%" y="533" width="0.0784%" height="15" fill="rgb(225,218,4)" fg:x="9350" fg:w="16"/><text x="46.0586%" y="543.50"></text></g><g><title>egui_example`DYLD-STUB$$malloc (9 samples, 0.04%)</title><rect x="45.9164%" y="517" width="0.0441%" height="15" fill="rgb(230,182,32)" fg:x="9372" fg:w="9"/><text x="46.1664%" y="527.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (7 samples, 0.03%)</title><rect x="45.9605%" y="517" width="0.0343%" height="15" fill="rgb(242,56,43)" fg:x="9381" fg:w="7"/><text x="46.2105%" y="527.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::cached::Cached&lt;alloc::vec::Vec&lt;cosmic_text::layout::LayoutLine&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="45.9948%" y="517" width="0.0147%" height="15" fill="rgb(233,99,24)" fg:x="9388" fg:w="3"/><text x="46.2448%" y="527.50"></text></g><g><title>egui_example`DYLD-STUB$$free (18 samples, 0.09%)</title><rect x="46.0732%" y="501" width="0.0882%" height="15" fill="rgb(234,209,42)" fg:x="9404" fg:w="18"/><text x="46.3232%" y="511.50"></text></g><g><title>egui_example`DYLD-STUB$$malloc (6 samples, 0.03%)</title><rect x="46.1614%" y="501" width="0.0294%" height="15" fill="rgb(227,7,12)" fg:x="9422" fg:w="6"/><text x="46.4114%" y="511.50"></text></g><g><title>egui_example`DYLD-STUB$$memcpy (8 samples, 0.04%)</title><rect x="46.1908%" y="501" width="0.0392%" height="15" fill="rgb(245,203,43)" fg:x="9428" fg:w="8"/><text x="46.4408%" y="511.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (8 samples, 0.04%)</title><rect x="46.2300%" y="501" width="0.0392%" height="15" fill="rgb(238,205,33)" fg:x="9436" fg:w="8"/><text x="46.4800%" y="511.50"></text></g><g><title>egui_example`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.02%)</title><rect x="46.2839%" y="501" width="0.0196%" height="15" fill="rgb(231,56,7)" fg:x="9447" fg:w="4"/><text x="46.5339%" y="511.50"></text></g><g><title>egui_example`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (20 samples, 0.10%)</title><rect x="46.3035%" y="501" width="0.0980%" height="15" fill="rgb(244,186,29)" fg:x="9451" fg:w="20"/><text x="46.5535%" y="511.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::cached::Cached&lt;alloc::vec::Vec&lt;cosmic_text::layout::LayoutLine&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="46.4015%" y="501" width="0.0294%" height="15" fill="rgb(234,111,31)" fg:x="9471" fg:w="6"/><text x="46.6515%" y="511.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::cached::Cached&lt;cosmic_text::shape::ShapeLine&gt;&gt; (14 samples, 0.07%)</title><rect x="46.4308%" y="501" width="0.0686%" height="15" fill="rgb(241,149,10)" fg:x="9477" fg:w="14"/><text x="46.6808%" y="511.50"></text></g><g><title>egui_example`DYLD-STUB$$free (36 samples, 0.18%)</title><rect x="46.6121%" y="485" width="0.1764%" height="15" fill="rgb(249,206,44)" fg:x="9514" fg:w="36"/><text x="46.8621%" y="495.50"></text></g><g><title>egui_example`DYLD-STUB$$memcpy (4 samples, 0.02%)</title><rect x="46.7885%" y="485" width="0.0196%" height="15" fill="rgb(251,153,30)" fg:x="9550" fg:w="4"/><text x="47.0385%" y="495.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (9 samples, 0.04%)</title><rect x="46.8081%" y="485" width="0.0441%" height="15" fill="rgb(239,152,38)" fg:x="9554" fg:w="9"/><text x="47.0581%" y="495.50"></text></g><g><title>egui_example`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (9 samples, 0.04%)</title><rect x="46.8620%" y="485" width="0.0441%" height="15" fill="rgb(249,139,47)" fg:x="9565" fg:w="9"/><text x="47.1120%" y="495.50"></text></g><g><title>egui_example`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (8 samples, 0.04%)</title><rect x="46.9061%" y="485" width="0.0392%" height="15" fill="rgb(244,64,35)" fg:x="9574" fg:w="8"/><text x="47.1561%" y="495.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::cached::Cached&lt;cosmic_text::shape::ShapeLine&gt;&gt; (34 samples, 0.17%)</title><rect x="46.9453%" y="485" width="0.1666%" height="15" fill="rgb(216,46,15)" fg:x="9582" fg:w="34"/><text x="47.1953%" y="495.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsList::defaults (23 samples, 0.11%)</title><rect x="47.1119%" y="485" width="0.1127%" height="15" fill="rgb(250,74,19)" fg:x="9616" fg:w="23"/><text x="47.3619%" y="495.50"></text></g><g><title>egui_example`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.08%)</title><rect x="48.2289%" y="469" width="0.0833%" height="15" fill="rgb(249,42,33)" fg:x="9844" fg:w="17"/><text x="48.4789%" y="479.50"></text></g><g><title>egui_example`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.09%)</title><rect x="48.3122%" y="469" width="0.0931%" height="15" fill="rgb(242,149,17)" fg:x="9861" fg:w="19"/><text x="48.5622%" y="479.50"></text></g><g><title>egui_example`DYLD-STUB$$free (21 samples, 0.10%)</title><rect x="48.4053%" y="469" width="0.1029%" height="15" fill="rgb(244,29,21)" fg:x="9880" fg:w="21"/><text x="48.6553%" y="479.50"></text></g><g><title>egui_example`DYLD-STUB$$malloc (47 samples, 0.23%)</title><rect x="48.5082%" y="469" width="0.2303%" height="15" fill="rgb(220,130,37)" fg:x="9901" fg:w="47"/><text x="48.7582%" y="479.50"></text></g><g><title>egui_example`DYLD-STUB$$memcpy (8 samples, 0.04%)</title><rect x="48.7384%" y="469" width="0.0392%" height="15" fill="rgb(211,67,2)" fg:x="9948" fg:w="8"/><text x="48.9884%" y="479.50"></text></g><g><title>egui_example`DYLD-STUB$$memset (7 samples, 0.03%)</title><rect x="48.7776%" y="469" width="0.0343%" height="15" fill="rgb(235,68,52)" fg:x="9956" fg:w="7"/><text x="49.0276%" y="479.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (27 samples, 0.13%)</title><rect x="48.8119%" y="469" width="0.1323%" height="15" fill="rgb(246,142,3)" fg:x="9963" fg:w="27"/><text x="49.0619%" y="479.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc13___rdl_dealloc (7 samples, 0.03%)</title><rect x="48.9442%" y="469" width="0.0343%" height="15" fill="rgb(241,25,7)" fg:x="9990" fg:w="7"/><text x="49.1942%" y="479.50"></text></g><g><title>egui_example`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (22 samples, 0.11%)</title><rect x="48.9785%" y="469" width="0.1078%" height="15" fill="rgb(242,119,39)" fg:x="9997" fg:w="22"/><text x="49.2285%" y="479.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (12 samples, 0.06%)</title><rect x="49.1892%" y="453" width="0.0588%" height="15" fill="rgb(241,98,45)" fg:x="10040" fg:w="12"/><text x="49.4392%" y="463.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (51 samples, 0.25%)</title><rect x="49.2480%" y="453" width="0.2499%" height="15" fill="rgb(254,28,30)" fg:x="10052" fg:w="51"/><text x="49.4980%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (47 samples, 0.23%)</title><rect x="49.2676%" y="437" width="0.2303%" height="15" fill="rgb(241,142,54)" fg:x="10056" fg:w="47"/><text x="49.5176%" y="447.50"></text></g><g><title>egui_example`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (111 samples, 0.54%)</title><rect x="49.0863%" y="469" width="0.5438%" height="15" fill="rgb(222,85,15)" fg:x="10019" fg:w="111"/><text x="49.3363%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.13%)</title><rect x="49.4978%" y="453" width="0.1323%" height="15" fill="rgb(210,85,47)" fg:x="10103" fg:w="27"/><text x="49.7478%" y="463.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="49.6301%" y="469" width="0.0245%" height="15" fill="rgb(224,206,25)" fg:x="10130" fg:w="5"/><text x="49.8801%" y="479.50"></text></g><g><title>egui_example`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (138 samples, 0.68%)</title><rect x="49.6546%" y="469" width="0.6761%" height="15" fill="rgb(243,201,19)" fg:x="10135" fg:w="138"/><text x="49.9046%" y="479.50"></text></g><g><title>egui_example`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.12%)</title><rect x="50.2131%" y="453" width="0.1176%" height="15" fill="rgb(236,59,4)" fg:x="10249" fg:w="24"/><text x="50.4631%" y="463.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsList::defaults (28 samples, 0.14%)</title><rect x="50.3307%" y="469" width="0.1372%" height="15" fill="rgb(254,179,45)" fg:x="10273" fg:w="28"/><text x="50.5807%" y="479.50"></text></g><g><title>egui_example`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="51.4331%" y="453" width="0.0294%" height="15" fill="rgb(226,14,10)" fg:x="10498" fg:w="6"/><text x="51.6831%" y="463.50"></text></g><g><title>egui_example`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (122 samples, 0.60%)</title><rect x="51.4624%" y="453" width="0.5977%" height="15" fill="rgb(244,27,41)" fg:x="10504" fg:w="122"/><text x="51.7124%" y="463.50"></text></g><g><title>egui_example`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (61 samples, 0.30%)</title><rect x="51.7613%" y="437" width="0.2989%" height="15" fill="rgb(235,35,32)" fg:x="10565" fg:w="61"/><text x="52.0113%" y="447.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (7 samples, 0.03%)</title><rect x="52.1826%" y="437" width="0.0343%" height="15" fill="rgb(218,68,31)" fg:x="10651" fg:w="7"/><text x="52.4326%" y="447.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (45 samples, 0.22%)</title><rect x="52.2169%" y="437" width="0.2205%" height="15" fill="rgb(207,120,37)" fg:x="10658" fg:w="45"/><text x="52.4669%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (41 samples, 0.20%)</title><rect x="52.2365%" y="421" width="0.2009%" height="15" fill="rgb(227,98,0)" fg:x="10662" fg:w="41"/><text x="52.4865%" y="431.50"></text></g><g><title>egui_example`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (104 samples, 0.51%)</title><rect x="52.0602%" y="453" width="0.5095%" height="15" fill="rgb(207,7,3)" fg:x="10626" fg:w="104"/><text x="52.3102%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.13%)</title><rect x="52.4374%" y="437" width="0.1323%" height="15" fill="rgb(206,98,19)" fg:x="10703" fg:w="27"/><text x="52.6874%" y="447.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (11 samples, 0.05%)</title><rect x="52.5697%" y="453" width="0.0539%" height="15" fill="rgb(217,5,26)" fg:x="10730" fg:w="11"/><text x="52.8197%" y="463.50"></text></g><g><title>egui_example`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (90 samples, 0.44%)</title><rect x="52.6236%" y="453" width="0.4409%" height="15" fill="rgb(235,190,38)" fg:x="10741" fg:w="90"/><text x="52.8736%" y="463.50"></text></g><g><title>egui_example`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.09%)</title><rect x="52.9714%" y="437" width="0.0931%" height="15" fill="rgb(247,86,24)" fg:x="10812" fg:w="19"/><text x="53.2214%" y="447.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsList::defaults (11 samples, 0.05%)</title><rect x="53.0645%" y="453" width="0.0539%" height="15" fill="rgb(205,101,16)" fg:x="10831" fg:w="11"/><text x="53.3145%" y="463.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsList::get_span (12 samples, 0.06%)</title><rect x="53.1184%" y="453" width="0.0588%" height="15" fill="rgb(246,168,33)" fg:x="10842" fg:w="12"/><text x="53.3684%" y="463.50"></text></g><g><title>egui_example`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.02%)</title><rect x="54.3530%" y="437" width="0.0245%" height="15" fill="rgb(231,114,1)" fg:x="11094" fg:w="5"/><text x="54.6030%" y="447.50"></text></g><g><title>egui_example`DYLD-STUB$$malloc (8 samples, 0.04%)</title><rect x="54.3775%" y="437" width="0.0392%" height="15" fill="rgb(207,184,53)" fg:x="11099" fg:w="8"/><text x="54.6275%" y="447.50"></text></g><g><title>egui_example`DYLD-STUB$$memcpy (7 samples, 0.03%)</title><rect x="54.4167%" y="437" width="0.0343%" height="15" fill="rgb(224,95,51)" fg:x="11107" fg:w="7"/><text x="54.6667%" y="447.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (4 samples, 0.02%)</title><rect x="54.4510%" y="437" width="0.0196%" height="15" fill="rgb(212,188,45)" fg:x="11114" fg:w="4"/><text x="54.7010%" y="447.50"></text></g><g><title>egui_example`alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_back_checked (7 samples, 0.03%)</title><rect x="54.4706%" y="437" width="0.0343%" height="15" fill="rgb(223,154,38)" fg:x="11118" fg:w="7"/><text x="54.7206%" y="447.50"></text></g><g><title>egui_example`alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked (4 samples, 0.02%)</title><rect x="54.5049%" y="437" width="0.0196%" height="15" fill="rgb(251,22,52)" fg:x="11125" fg:w="4"/><text x="54.7549%" y="447.50"></text></g><g><title>egui_example`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.02%)</title><rect x="54.5245%" y="437" width="0.0245%" height="15" fill="rgb(229,209,22)" fg:x="11129" fg:w="5"/><text x="54.7745%" y="447.50"></text></g><g><title>egui_example`core::hash::BuildHasher::hash_one (6 samples, 0.03%)</title><rect x="54.5490%" y="437" width="0.0294%" height="15" fill="rgb(234,138,34)" fg:x="11134" fg:w="6"/><text x="54.7990%" y="447.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::shape_run_cache::ShapeRunKey&gt; (4 samples, 0.02%)</title><rect x="54.5784%" y="437" width="0.0196%" height="15" fill="rgb(212,95,11)" fg:x="11140" fg:w="4"/><text x="54.8284%" y="447.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsList::defaults (61 samples, 0.30%)</title><rect x="54.5980%" y="437" width="0.2989%" height="15" fill="rgb(240,179,47)" fg:x="11144" fg:w="61"/><text x="54.8480%" y="447.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsList::get_span (61 samples, 0.30%)</title><rect x="54.8969%" y="437" width="0.2989%" height="15" fill="rgb(240,163,11)" fg:x="11205" fg:w="61"/><text x="55.1469%" y="447.50"></text></g><g><title>egui_example`alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_back_checked (20 samples, 0.10%)</title><rect x="55.0977%" y="421" width="0.0980%" height="15" fill="rgb(236,37,12)" fg:x="11246" fg:w="20"/><text x="55.3477%" y="431.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsOwned::new (19 samples, 0.09%)</title><rect x="55.1957%" y="437" width="0.0931%" height="15" fill="rgb(232,164,16)" fg:x="11266" fg:w="19"/><text x="55.4457%" y="447.50"></text></g><g><title>egui_example`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="56.1707%" y="421" width="0.0294%" height="15" fill="rgb(244,205,15)" fg:x="11465" fg:w="6"/><text x="56.4207%" y="431.50"></text></g><g><title>egui_example`&lt;cosmic_text::attrs::AttrsOwned as core::hash::Hash&gt;::hash (44 samples, 0.22%)</title><rect x="56.2001%" y="421" width="0.2156%" height="15" fill="rgb(223,117,47)" fg:x="11471" fg:w="44"/><text x="56.4501%" y="431.50"></text></g><g><title>egui_example`DYLD-STUB$$free (5 samples, 0.02%)</title><rect x="56.4157%" y="421" width="0.0245%" height="15" fill="rgb(244,107,35)" fg:x="11515" fg:w="5"/><text x="56.6657%" y="431.50"></text></g><g><title>egui_example`DYLD-STUB$$memcmp (5 samples, 0.02%)</title><rect x="56.4402%" y="421" width="0.0245%" height="15" fill="rgb(205,140,8)" fg:x="11520" fg:w="5"/><text x="56.6902%" y="431.50"></text></g><g><title>egui_example`DYLD-STUB$$memcpy (10 samples, 0.05%)</title><rect x="56.4647%" y="421" width="0.0490%" height="15" fill="rgb(228,84,46)" fg:x="11525" fg:w="10"/><text x="56.7147%" y="431.50"></text></g><g><title>egui_example`alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked (10 samples, 0.05%)</title><rect x="56.5136%" y="421" width="0.0490%" height="15" fill="rgb(254,188,9)" fg:x="11535" fg:w="10"/><text x="56.7636%" y="431.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (6 samples, 0.03%)</title><rect x="56.7096%" y="405" width="0.0294%" height="15" fill="rgb(206,112,54)" fg:x="11575" fg:w="6"/><text x="56.9596%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (21 samples, 0.10%)</title><rect x="56.9007%" y="373" width="0.1029%" height="15" fill="rgb(216,84,49)" fg:x="11614" fg:w="21"/><text x="57.1507%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.03%)</title><rect x="57.0036%" y="373" width="0.0294%" height="15" fill="rgb(214,194,35)" fg:x="11635" fg:w="6"/><text x="57.2536%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (4 samples, 0.02%)</title><rect x="57.2044%" y="357" width="0.0196%" height="15" fill="rgb(249,28,3)" fg:x="11676" fg:w="4"/><text x="57.4544%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (45 samples, 0.22%)</title><rect x="57.2240%" y="357" width="0.2205%" height="15" fill="rgb(222,56,52)" fg:x="11680" fg:w="45"/><text x="57.4740%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (9 samples, 0.04%)</title><rect x="57.8708%" y="341" width="0.0441%" height="15" fill="rgb(245,217,50)" fg:x="11812" fg:w="9"/><text x="58.1208%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (258 samples, 1.26%)</title><rect x="56.8223%" y="389" width="1.2640%" height="15" fill="rgb(213,201,24)" fg:x="11598" fg:w="258"/><text x="57.0723%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (215 samples, 1.05%)</title><rect x="57.0330%" y="373" width="1.0534%" height="15" fill="rgb(248,116,28)" fg:x="11641" fg:w="215"/><text x="57.2830%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (131 samples, 0.64%)</title><rect x="57.4445%" y="357" width="0.6418%" height="15" fill="rgb(219,72,43)" fg:x="11725" fg:w="131"/><text x="57.6945%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (35 samples, 0.17%)</title><rect x="57.9148%" y="341" width="0.1715%" height="15" fill="rgb(209,138,14)" fg:x="11821" fg:w="35"/><text x="58.1648%" y="351.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (286 samples, 1.40%)</title><rect x="56.7390%" y="405" width="1.4012%" height="15" fill="rgb(222,18,33)" fg:x="11581" fg:w="286"/><text x="56.9890%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.05%)</title><rect x="58.0863%" y="389" width="0.0539%" height="15" fill="rgb(213,199,7)" fg:x="11856" fg:w="11"/><text x="58.3363%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.12%)</title><rect x="58.1402%" y="405" width="0.1225%" height="15" fill="rgb(250,110,10)" fg:x="11867" fg:w="25"/><text x="58.3902%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.03%)</title><rect x="58.2627%" y="405" width="0.0294%" height="15" fill="rgb(248,123,6)" fg:x="11892" fg:w="6"/><text x="58.5127%" y="415.50"></text></g><g><title>egui_example`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (356 samples, 1.74%)</title><rect x="56.5626%" y="421" width="1.7442%" height="15" fill="rgb(206,91,31)" fg:x="11545" fg:w="356"/><text x="56.8126%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.01%)</title><rect x="58.2921%" y="405" width="0.0147%" height="15" fill="rgb(211,154,13)" fg:x="11898" fg:w="3"/><text x="58.5421%" y="415.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="58.3068%" y="421" width="0.0245%" height="15" fill="rgb(225,148,7)" fg:x="11901" fg:w="5"/><text x="58.5568%" y="431.50"></text></g><g><title>egui_example`core::hash::BuildHasher::hash_one (483 samples, 2.37%)</title><rect x="58.3313%" y="421" width="2.3664%" height="15" fill="rgb(220,160,43)" fg:x="11906" fg:w="483"/><text x="58.5813%" y="431.50">eg..</text></g><g><title>egui_example`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="60.7810%" y="405" width="0.0294%" height="15" fill="rgb(213,52,39)" fg:x="12406" fg:w="6"/><text x="61.0310%" y="415.50"></text></g><g><title>egui_example`core::ptr::drop_in_place&lt;cosmic_text::shape_run_cache::ShapeRunKey&gt; (87 samples, 0.43%)</title><rect x="60.6977%" y="421" width="0.4262%" height="15" fill="rgb(243,137,7)" fg:x="12389" fg:w="87"/><text x="60.9477%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (64 samples, 0.31%)</title><rect x="60.8103%" y="405" width="0.3136%" height="15" fill="rgb(230,79,13)" fg:x="12412" fg:w="64"/><text x="61.0603%" y="415.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsList::defaults (84 samples, 0.41%)</title><rect x="61.1239%" y="421" width="0.4115%" height="15" fill="rgb(247,105,23)" fg:x="12476" fg:w="84"/><text x="61.3739%" y="431.50"></text></g><g><title>egui_example`cosmic_text::attrs::AttrsOwned::new (189 samples, 0.93%)</title><rect x="61.5354%" y="421" width="0.9260%" height="15" fill="rgb(223,179,41)" fg:x="12560" fg:w="189"/><text x="61.7854%" y="431.50"></text></g><g><title>egui_example`hashbrown::map::equivalent_key::_{{closure}} (61 samples, 0.30%)</title><rect x="62.4663%" y="421" width="0.2989%" height="15" fill="rgb(218,9,34)" fg:x="12750" fg:w="61"/><text x="62.7163%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_free (17 samples, 0.08%)</title><rect x="62.7652%" y="421" width="0.0833%" height="15" fill="rgb(222,106,8)" fg:x="12811" fg:w="17"/><text x="63.0152%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.03%)</title><rect x="62.8485%" y="421" width="0.0294%" height="15" fill="rgb(211,220,0)" fg:x="12828" fg:w="6"/><text x="63.0985%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (49 samples, 0.24%)</title><rect x="62.8779%" y="421" width="0.2401%" height="15" fill="rgb(229,52,16)" fg:x="12834" fg:w="49"/><text x="63.1279%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (36 samples, 0.18%)</title><rect x="63.1179%" y="421" width="0.1764%" height="15" fill="rgb(212,155,18)" fg:x="12883" fg:w="36"/><text x="63.3679%" y="431.50"></text></g><g><title>egui_example`cosmic_text::shape::Shaping::run (1,656 samples, 8.11%)</title><rect x="55.2888%" y="437" width="8.1133%" height="15" fill="rgb(242,21,14)" fg:x="11285" fg:w="1656"/><text x="55.5388%" y="447.50">egui_exampl..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (22 samples, 0.11%)</title><rect x="63.2943%" y="421" width="0.1078%" height="15" fill="rgb(222,19,48)" fg:x="12919" fg:w="22"/><text x="63.5443%" y="431.50"></text></g><g><title>egui_example`unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (165 samples, 0.81%)</title><rect x="63.4021%" y="437" width="0.8084%" height="15" fill="rgb(232,45,27)" fg:x="12941" fg:w="165"/><text x="63.6521%" y="447.50"></text></g><g><title>egui_example`unicode_segmentation::tables::grapheme::grapheme_category (55 samples, 0.27%)</title><rect x="63.9410%" y="421" width="0.2695%" height="15" fill="rgb(249,103,42)" fg:x="13051" fg:w="55"/><text x="64.1910%" y="431.50"></text></g><g><title>egui_example`unicode_segmentation::tables::grapheme::grapheme_category (6 samples, 0.03%)</title><rect x="64.2105%" y="437" width="0.0294%" height="15" fill="rgb(246,81,33)" fg:x="13106" fg:w="6"/><text x="64.4605%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.10%)</title><rect x="64.2399%" y="437" width="0.1029%" height="15" fill="rgb(252,33,42)" fg:x="13112" fg:w="21"/><text x="64.4899%" y="447.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeWord::build (2,327 samples, 11.40%)</title><rect x="53.1772%" y="453" width="11.4007%" height="15" fill="rgb(209,212,41)" fg:x="10854" fg:w="2327"/><text x="53.4272%" y="463.50">egui_example`cosm..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (48 samples, 0.24%)</title><rect x="64.3428%" y="437" width="0.2352%" height="15" fill="rgb(207,154,6)" fg:x="13133" fg:w="48"/><text x="64.5928%" y="447.50"></text></g><g><title>egui_example`cosmic_text::shape::Shaping::run (19 samples, 0.09%)</title><rect x="64.5779%" y="453" width="0.0931%" height="15" fill="rgb(223,64,47)" fg:x="13181" fg:w="19"/><text x="64.8279%" y="463.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeSpan::build (2,904 samples, 14.23%)</title><rect x="50.4679%" y="469" width="14.2276%" height="15" fill="rgb(211,161,38)" fg:x="10301" fg:w="2904"/><text x="50.7179%" y="479.50">egui_example`cosmic_te..</text></g><g><title>egui_example`unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (5 samples, 0.02%)</title><rect x="64.6710%" y="453" width="0.0245%" height="15" fill="rgb(219,138,40)" fg:x="13200" fg:w="5"/><text x="64.9210%" y="463.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeWord::build (16 samples, 0.08%)</title><rect x="64.6955%" y="469" width="0.0784%" height="15" fill="rgb(241,228,46)" fg:x="13205" fg:w="16"/><text x="64.9455%" y="479.50"></text></g><g><title>egui_example`DYLD-STUB$$malloc (16 samples, 0.08%)</title><rect x="66.9590%" y="437" width="0.0784%" height="15" fill="rgb(223,209,38)" fg:x="13667" fg:w="16"/><text x="67.2090%" y="447.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (21 samples, 0.10%)</title><rect x="67.0374%" y="437" width="0.1029%" height="15" fill="rgb(236,164,45)" fg:x="13683" fg:w="21"/><text x="67.2874%" y="447.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (100 samples, 0.49%)</title><rect x="67.1403%" y="437" width="0.4899%" height="15" fill="rgb(231,15,5)" fg:x="13704" fg:w="100"/><text x="67.3903%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (79 samples, 0.39%)</title><rect x="67.2432%" y="421" width="0.3870%" height="15" fill="rgb(252,35,15)" fg:x="13725" fg:w="79"/><text x="67.4932%" y="431.50"></text></g><g><title>egui_example`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (237 samples, 1.16%)</title><rect x="66.8218%" y="453" width="1.1611%" height="15" fill="rgb(248,181,18)" fg:x="13639" fg:w="237"/><text x="67.0718%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (72 samples, 0.35%)</title><rect x="67.6302%" y="437" width="0.3528%" height="15" fill="rgb(233,39,42)" fg:x="13804" fg:w="72"/><text x="67.8802%" y="447.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (17 samples, 0.08%)</title><rect x="67.9830%" y="453" width="0.0833%" height="15" fill="rgb(238,110,33)" fg:x="13876" fg:w="17"/><text x="68.2330%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (103 samples, 0.50%)</title><rect x="68.0662%" y="453" width="0.5046%" height="15" fill="rgb(233,195,10)" fg:x="13893" fg:w="103"/><text x="68.3162%" y="463.50"></text></g><g><title>egui_example`unicode_bidi::BidiInfo::new_with_data_source (916 samples, 4.49%)</title><rect x="64.7739%" y="469" width="4.4878%" height="15" fill="rgb(254,105,3)" fg:x="13221" fg:w="916"/><text x="65.0239%" y="479.50">egui_..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (141 samples, 0.69%)</title><rect x="68.5709%" y="453" width="0.6908%" height="15" fill="rgb(221,225,9)" fg:x="13996" fg:w="141"/><text x="68.8209%" y="463.50"></text></g><g><title>egui_example`unicode_bidi::char_data::bsearch_range_value_table (77 samples, 0.38%)</title><rect x="69.2617%" y="469" width="0.3772%" height="15" fill="rgb(224,227,45)" fg:x="14137" fg:w="77"/><text x="69.5117%" y="479.50"></text></g><g><title>egui_example`unicode_linebreak::linebreaks (9 samples, 0.04%)</title><rect x="69.6389%" y="469" width="0.0441%" height="15" fill="rgb(229,198,43)" fg:x="14214" fg:w="9"/><text x="69.8889%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_free (55 samples, 0.27%)</title><rect x="69.6928%" y="469" width="0.2695%" height="15" fill="rgb(206,209,35)" fg:x="14225" fg:w="55"/><text x="69.9428%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (82 samples, 0.40%)</title><rect x="69.9623%" y="469" width="0.4017%" height="15" fill="rgb(245,195,53)" fg:x="14280" fg:w="82"/><text x="70.2123%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (228 samples, 1.12%)</title><rect x="70.3640%" y="469" width="1.1170%" height="15" fill="rgb(240,92,26)" fg:x="14362" fg:w="228"/><text x="70.6140%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (41 samples, 0.20%)</title><rect x="71.4811%" y="469" width="0.2009%" height="15" fill="rgb(207,40,23)" fg:x="14590" fg:w="41"/><text x="71.7311%" y="479.50"></text></g><g><title>libsystem_platform.dylib`__bzero (5 samples, 0.02%)</title><rect x="71.6819%" y="469" width="0.0245%" height="15" fill="rgb(223,111,35)" fg:x="14631" fg:w="5"/><text x="71.9319%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (39 samples, 0.19%)</title><rect x="71.7064%" y="469" width="0.1911%" height="15" fill="rgb(229,147,28)" fg:x="14636" fg:w="39"/><text x="71.9564%" y="479.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeLine::build (5,079 samples, 24.88%)</title><rect x="47.2245%" y="485" width="24.8836%" height="15" fill="rgb(211,29,28)" fg:x="9639" fg:w="5079"/><text x="47.4745%" y="495.50">egui_example`cosmic_text::shape::ShapeLi..</text></g><g><title>libsystem_platform.dylib`_platform_memset (43 samples, 0.21%)</title><rect x="71.8975%" y="469" width="0.2107%" height="15" fill="rgb(228,72,33)" fg:x="14675" fg:w="43"/><text x="72.1475%" y="479.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeSpan::build (17 samples, 0.08%)</title><rect x="72.1082%" y="485" width="0.0833%" height="15" fill="rgb(205,214,31)" fg:x="14718" fg:w="17"/><text x="72.3582%" y="495.50"></text></g><g><title>egui_example`unicode_bidi::BidiInfo::new_with_data_source (12 samples, 0.06%)</title><rect x="72.1915%" y="485" width="0.0588%" height="15" fill="rgb(224,111,15)" fg:x="14735" fg:w="12"/><text x="72.4415%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_free (92 samples, 0.45%)</title><rect x="72.2503%" y="485" width="0.4507%" height="15" fill="rgb(253,21,26)" fg:x="14747" fg:w="92"/><text x="72.5003%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (29 samples, 0.14%)</title><rect x="72.7010%" y="485" width="0.1421%" height="15" fill="rgb(245,139,43)" fg:x="14839" fg:w="29"/><text x="72.9510%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (26 samples, 0.13%)</title><rect x="72.8431%" y="485" width="0.1274%" height="15" fill="rgb(252,170,7)" fg:x="14868" fg:w="26"/><text x="73.0931%" y="495.50"></text></g><g><title>egui_example`cosmic_text::buffer_line::BufferLine::shape (5,429 samples, 26.60%)</title><rect x="46.4994%" y="501" width="26.5984%" height="15" fill="rgb(231,118,14)" fg:x="9491" fg:w="5429"/><text x="46.7494%" y="511.50">egui_example`cosmic_text::buffer_line::Buff..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.11%)</title><rect x="72.9852%" y="485" width="0.1127%" height="15" fill="rgb(238,83,0)" fg:x="14897" fg:w="23"/><text x="73.2352%" y="495.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeLine::build (13 samples, 0.06%)</title><rect x="73.0978%" y="501" width="0.0637%" height="15" fill="rgb(221,39,39)" fg:x="14920" fg:w="13"/><text x="73.3478%" y="511.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeLine::layout_to_buffer (348 samples, 1.70%)</title><rect x="73.1615%" y="501" width="1.7050%" height="15" fill="rgb(222,119,46)" fg:x="14933" fg:w="348"/><text x="73.4115%" y="511.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeLine::layout_to_buffer::_{{closure}} (27 samples, 0.13%)</title><rect x="74.8665%" y="501" width="0.1323%" height="15" fill="rgb(222,165,49)" fg:x="15281" fg:w="27"/><text x="75.1165%" y="511.50"></text></g><g><title>egui_example`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="74.9988%" y="485" width="0.0196%" height="15" fill="rgb(219,113,52)" fg:x="15308" fg:w="4"/><text x="75.2488%" y="495.50"></text></g><g><title>egui_example`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.04%)</title><rect x="75.0184%" y="485" width="0.0392%" height="15" fill="rgb(214,7,15)" fg:x="15312" fg:w="8"/><text x="75.2684%" y="495.50"></text></g><g><title>egui_example`DYLD-STUB$$malloc (4 samples, 0.02%)</title><rect x="75.1556%" y="469" width="0.0196%" height="15" fill="rgb(235,32,4)" fg:x="15340" fg:w="4"/><text x="75.4056%" y="479.50"></text></g><g><title>egui_example`_RNvCsgws33dotfsx_7___rustc11___rdl_alloc (3 samples, 0.01%)</title><rect x="75.1752%" y="469" width="0.0147%" height="15" fill="rgb(238,90,54)" fg:x="15344" fg:w="3"/><text x="75.4252%" y="479.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (56 samples, 0.27%)</title><rect x="75.1898%" y="469" width="0.2744%" height="15" fill="rgb(213,208,19)" fg:x="15347" fg:w="56"/><text x="75.4398%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (46 samples, 0.23%)</title><rect x="75.2388%" y="453" width="0.2254%" height="15" fill="rgb(233,156,4)" fg:x="15357" fg:w="46"/><text x="75.4888%" y="463.50"></text></g><g><title>egui_example`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (108 samples, 0.53%)</title><rect x="75.0674%" y="485" width="0.5291%" height="15" fill="rgb(207,194,5)" fg:x="15322" fg:w="108"/><text x="75.3174%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.13%)</title><rect x="75.4642%" y="469" width="0.1323%" height="15" fill="rgb(206,111,30)" fg:x="15403" fg:w="27"/><text x="75.7142%" y="479.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (10 samples, 0.05%)</title><rect x="75.5965%" y="485" width="0.0490%" height="15" fill="rgb(243,70,54)" fg:x="15430" fg:w="10"/><text x="75.8465%" y="495.50"></text></g><g><title>egui_example`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.07%)</title><rect x="76.3069%" y="469" width="0.0735%" height="15" fill="rgb(242,28,8)" fg:x="15575" fg:w="15"/><text x="76.5569%" y="479.50"></text></g><g><title>egui_example`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (163 samples, 0.80%)</title><rect x="75.6455%" y="485" width="0.7986%" height="15" fill="rgb(219,106,18)" fg:x="15440" fg:w="163"/><text x="75.8955%" y="495.50"></text></g><g><title>egui_example`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.06%)</title><rect x="76.3804%" y="469" width="0.0637%" height="15" fill="rgb(244,222,10)" fg:x="15590" fg:w="13"/><text x="76.6304%" y="479.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeLine::layout_to_buffer::_{{closure}} (205 samples, 1.00%)</title><rect x="76.4441%" y="485" width="1.0044%" height="15" fill="rgb(236,179,52)" fg:x="15603" fg:w="205"/><text x="76.6941%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (3 samples, 0.01%)</title><rect x="77.4484%" y="485" width="0.0147%" height="15" fill="rgb(213,23,39)" fg:x="15808" fg:w="3"/><text x="77.6984%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (140 samples, 0.69%)</title><rect x="77.4631%" y="485" width="0.6859%" height="15" fill="rgb(238,48,10)" fg:x="15811" fg:w="140"/><text x="77.7131%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (81 samples, 0.40%)</title><rect x="78.1490%" y="485" width="0.3968%" height="15" fill="rgb(251,196,23)" fg:x="15951" fg:w="81"/><text x="78.3990%" y="495.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeLine::layout_to_buffer (770 samples, 3.77%)</title><rect x="74.9988%" y="501" width="3.7725%" height="15" fill="rgb(250,152,24)" fg:x="15308" fg:w="770"/><text x="75.2488%" y="511.50">egui..</text></g><g><title>libsystem_platform.dylib`_platform_memset (44 samples, 0.22%)</title><rect x="78.5557%" y="485" width="0.2156%" height="15" fill="rgb(209,150,17)" fg:x="16034" fg:w="44"/><text x="78.8057%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_free (64 samples, 0.31%)</title><rect x="78.7713%" y="501" width="0.3136%" height="15" fill="rgb(234,202,34)" fg:x="16078" fg:w="64"/><text x="79.0213%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (46 samples, 0.23%)</title><rect x="79.0848%" y="501" width="0.2254%" height="15" fill="rgb(253,148,53)" fg:x="16142" fg:w="46"/><text x="79.3348%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (22 samples, 0.11%)</title><rect x="79.3102%" y="501" width="0.1078%" height="15" fill="rgb(218,129,16)" fg:x="16188" fg:w="22"/><text x="79.5602%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (38 samples, 0.19%)</title><rect x="79.4180%" y="501" width="0.1862%" height="15" fill="rgb(216,85,19)" fg:x="16210" fg:w="38"/><text x="79.6680%" y="511.50"></text></g><g><title>egui_example`cosmic_text::buffer_line::BufferLine::layout (6,870 samples, 33.66%)</title><rect x="46.0095%" y="517" width="33.6583%" height="15" fill="rgb(235,228,7)" fg:x="9391" fg:w="6870"/><text x="46.2595%" y="527.50">egui_example`cosmic_text::buffer_line::BufferLine::layo..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.06%)</title><rect x="79.6041%" y="501" width="0.0637%" height="15" fill="rgb(245,175,0)" fg:x="16248" fg:w="13"/><text x="79.8541%" y="511.50"></text></g><g><title>egui_example`cosmic_text::buffer_line::BufferLine::shape (5 samples, 0.02%)</title><rect x="79.6678%" y="517" width="0.0245%" height="15" fill="rgb(208,168,36)" fg:x="16261" fg:w="5"/><text x="79.9178%" y="527.50"></text></g><g><title>egui_example`cosmic_text::shape::ShapeLine::layout_to_buffer (32 samples, 0.16%)</title><rect x="79.6923%" y="517" width="0.1568%" height="15" fill="rgb(246,171,24)" fg:x="16266" fg:w="32"/><text x="79.9423%" y="527.50"></text></g><g><title>egui_example`cosmic_text::buffer::Buffer::line_layout (6,950 samples, 34.05%)</title><rect x="45.8870%" y="533" width="34.0503%" height="15" fill="rgb(215,142,24)" fg:x="9366" fg:w="6950"/><text x="46.1370%" y="543.50">egui_example`cosmic_text::buffer::Buffer::line_layout</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.09%)</title><rect x="79.8491%" y="517" width="0.0882%" height="15" fill="rgb(250,187,7)" fg:x="16298" fg:w="18"/><text x="80.0991%" y="527.50"></text></g><g><title>egui_example`cosmic_text::buffer_line::BufferLine::layout (13 samples, 0.06%)</title><rect x="79.9373%" y="533" width="0.0637%" height="15" fill="rgb(228,66,33)" fg:x="16316" fg:w="13"/><text x="80.1873%" y="543.50"></text></g><g><title>egui_example`cosmic_text::swash::SwashCache::get_image (61 samples, 0.30%)</title><rect x="80.0010%" y="533" width="0.2989%" height="15" fill="rgb(234,215,21)" fg:x="16329" fg:w="61"/><text x="80.2510%" y="543.50"></text></g><g><title>egui_example`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (55 samples, 0.27%)</title><rect x="80.0304%" y="517" width="0.2695%" height="15" fill="rgb(222,191,20)" fg:x="16335" fg:w="55"/><text x="80.2804%" y="527.50"></text></g><g><title>egui_example`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.01%)</title><rect x="80.2998%" y="533" width="0.0147%" height="15" fill="rgb(245,79,54)" fg:x="16390" fg:w="3"/><text x="80.5498%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (3 samples, 0.01%)</title><rect x="80.3145%" y="533" width="0.0147%" height="15" fill="rgb(240,10,37)" fg:x="16393" fg:w="3"/><text x="80.5645%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_free (97 samples, 0.48%)</title><rect x="80.3292%" y="533" width="0.4752%" height="15" fill="rgb(214,192,32)" fg:x="16396" fg:w="97"/><text x="80.5792%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.10%)</title><rect x="80.8045%" y="533" width="0.1029%" height="15" fill="rgb(209,36,54)" fg:x="16493" fg:w="21"/><text x="81.0545%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (224 samples, 1.10%)</title><rect x="80.9074%" y="533" width="1.0974%" height="15" fill="rgb(220,10,11)" fg:x="16514" fg:w="224"/><text x="81.1574%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (72 samples, 0.35%)</title><rect x="82.0048%" y="533" width="0.3528%" height="15" fill="rgb(221,106,17)" fg:x="16738" fg:w="72"/><text x="82.2548%" y="543.50"></text></g><g><title>libsystem_platform.dylib`__bzero (3 samples, 0.01%)</title><rect x="82.3576%" y="533" width="0.0147%" height="15" fill="rgb(251,142,44)" fg:x="16810" fg:w="3"/><text x="82.6076%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.07%)</title><rect x="82.3723%" y="533" width="0.0686%" height="15" fill="rgb(238,13,15)" fg:x="16813" fg:w="14"/><text x="82.6223%" y="543.50"></text></g><g><title>egui_example`soft_ratatui::soft_backend::SoftBackend::draw_cell (14,213 samples, 69.63%)</title><rect x="13.0469%" y="549" width="69.6340%" height="15" fill="rgb(208,107,27)" fg:x="2663" fg:w="14213"/><text x="13.2969%" y="559.50">egui_example`soft_ratatui::soft_backend::SoftBackend::draw_cell</text></g><g><title>libsystem_platform.dylib`_platform_memset (49 samples, 0.24%)</title><rect x="82.4408%" y="533" width="0.2401%" height="15" fill="rgb(205,136,37)" fg:x="16827" fg:w="49"/><text x="82.6908%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_free (80 samples, 0.39%)</title><rect x="82.6809%" y="549" width="0.3919%" height="15" fill="rgb(250,205,27)" fg:x="16876" fg:w="80"/><text x="82.9309%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (86 samples, 0.42%)</title><rect x="83.0729%" y="549" width="0.4213%" height="15" fill="rgb(210,80,43)" fg:x="16956" fg:w="86"/><text x="83.3229%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (21 samples, 0.10%)</title><rect x="83.4942%" y="549" width="0.1029%" height="15" fill="rgb(247,160,36)" fg:x="17042" fg:w="21"/><text x="83.7442%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (37 samples, 0.18%)</title><rect x="83.5971%" y="549" width="0.1813%" height="15" fill="rgb(234,13,49)" fg:x="17063" fg:w="37"/><text x="83.8471%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`madvise (37 samples, 0.18%)</title><rect x="83.5971%" y="533" width="0.1813%" height="15" fill="rgb(234,122,0)" fg:x="17063" fg:w="37"/><text x="83.8471%" y="543.50"></text></g><g><title>egui_example`&lt;soft_ratatui::soft_backend::SoftBackend as ratatui::backend::Backend&gt;::draw (14,828 samples, 72.65%)</title><rect x="11.2047%" y="565" width="72.6471%" height="15" fill="rgb(207,146,38)" fg:x="2287" fg:w="14828"/><text x="11.4547%" y="575.50">egui_example`&lt;soft_ratatui::soft_backend::SoftBackend as ratatui::backend::Backend&gt;::draw</text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.07%)</title><rect x="83.7784%" y="549" width="0.0735%" height="15" fill="rgb(207,177,25)" fg:x="17100" fg:w="15"/><text x="84.0284%" y="559.50"></text></g><g><title>egui_example`DYLD-STUB$$memcmp (12 samples, 0.06%)</title><rect x="83.8518%" y="565" width="0.0588%" height="15" fill="rgb(211,178,42)" fg:x="17115" fg:w="12"/><text x="84.1018%" y="575.50"></text></g><g><title>egui_example`core::iter::traits::double_ended::DoubleEndedIterator::rfold (87 samples, 0.43%)</title><rect x="83.9106%" y="565" width="0.4262%" height="15" fill="rgb(230,69,54)" fg:x="17127" fg:w="87"/><text x="84.1606%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (50 samples, 0.24%)</title><rect x="85.0522%" y="485" width="0.2450%" height="15" fill="rgb(214,135,41)" fg:x="17360" fg:w="50"/><text x="85.3022%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (50 samples, 0.24%)</title><rect x="85.0522%" y="469" width="0.2450%" height="15" fill="rgb(237,67,25)" fg:x="17360" fg:w="50"/><text x="85.3022%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (50 samples, 0.24%)</title><rect x="85.0522%" y="453" width="0.2450%" height="15" fill="rgb(222,189,50)" fg:x="17360" fg:w="50"/><text x="85.3022%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (64 samples, 0.31%)</title><rect x="85.0522%" y="501" width="0.3136%" height="15" fill="rgb(245,148,34)" fg:x="17360" fg:w="64"/><text x="85.3022%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.07%)</title><rect x="85.2971%" y="485" width="0.0686%" height="15" fill="rgb(222,29,6)" fg:x="17410" fg:w="14"/><text x="85.5471%" y="495.50"></text></g><g><title>egui_example`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (65 samples, 0.32%)</title><rect x="85.0522%" y="549" width="0.3185%" height="15" fill="rgb(221,189,43)" fg:x="17360" fg:w="65"/><text x="85.3022%" y="559.50"></text></g><g><title>egui_example`alloc::raw_vec::finish_grow (65 samples, 0.32%)</title><rect x="85.0522%" y="533" width="0.3185%" height="15" fill="rgb(207,36,27)" fg:x="17360" fg:w="65"/><text x="85.3022%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (65 samples, 0.32%)</title><rect x="85.0522%" y="517" width="0.3185%" height="15" fill="rgb(217,90,24)" fg:x="17360" fg:w="65"/><text x="85.3022%" y="527.50"></text></g><g><title>egui_example`ratatui::buffer::buffer::Buffer::diff (429 samples, 2.10%)</title><rect x="84.3369%" y="565" width="2.1018%" height="15" fill="rgb(224,66,35)" fg:x="17214" fg:w="429"/><text x="84.5869%" y="575.50">e..</text></g><g><title>egui_example`core::iter::traits::double_ended::DoubleEndedIterator::rfold (218 samples, 1.07%)</title><rect x="85.3706%" y="549" width="1.0681%" height="15" fill="rgb(221,13,50)" fg:x="17425" fg:w="218"/><text x="85.6206%" y="559.50"></text></g><g><title>egui_example`unicode_width::tables::lookup_width (79 samples, 0.39%)</title><rect x="86.0516%" y="533" width="0.3870%" height="15" fill="rgb(236,68,49)" fg:x="17564" fg:w="79"/><text x="86.3016%" y="543.50"></text></g><g><title>egui_example`ratatui::buffer::buffer::Buffer::index_of (3 samples, 0.01%)</title><rect x="86.4387%" y="565" width="0.0147%" height="15" fill="rgb(229,146,28)" fg:x="17643" fg:w="3"/><text x="86.6887%" y="575.50"></text></g><g><title>egui_example`ratatui::buffer::buffer::Buffer::reset (25 samples, 0.12%)</title><rect x="86.4534%" y="565" width="0.1225%" height="15" fill="rgb(225,31,38)" fg:x="17646" fg:w="25"/><text x="86.7034%" y="575.50"></text></g><g><title>egui_example`ratatui::buffer::cell::Cell::set_char (7 samples, 0.03%)</title><rect x="86.5759%" y="565" width="0.0343%" height="15" fill="rgb(250,208,3)" fg:x="17671" fg:w="7"/><text x="86.8259%" y="575.50"></text></g><g><title>egui_example`soft_ratatui::soft_backend::SoftBackend::draw_cell (26 samples, 0.13%)</title><rect x="86.6102%" y="565" width="0.1274%" height="15" fill="rgb(246,54,23)" fg:x="17678" fg:w="26"/><text x="86.8602%" y="575.50"></text></g><g><title>egui_example`ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw (15,723 samples, 77.03%)</title><rect x="9.8770%" y="581" width="77.0320%" height="15" fill="rgb(243,76,11)" fg:x="2016" fg:w="15723"/><text x="10.1270%" y="591.50">egui_example`ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (35 samples, 0.17%)</title><rect x="86.7375%" y="565" width="0.1715%" height="15" fill="rgb(245,21,50)" fg:x="17704" fg:w="35"/><text x="86.9875%" y="575.50"></text></g><g><title>egui_example`&lt;egui_example::MyApp as eframe::epi::App&gt;::update (17,375 samples, 85.13%)</title><rect x="1.9597%" y="597" width="85.1257%" height="15" fill="rgb(228,9,43)" fg:x="400" fg:w="17375"/><text x="2.2097%" y="607.50">egui_example`&lt;egui_example::MyApp as eframe::epi::App&gt;::update</text></g><g><title>libsystem_malloc.dylib`free_medium (36 samples, 0.18%)</title><rect x="86.9090%" y="581" width="0.1764%" height="15" fill="rgb(208,100,47)" fg:x="17739" fg:w="36"/><text x="87.1590%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (36 samples, 0.18%)</title><rect x="86.9090%" y="565" width="0.1764%" height="15" fill="rgb(232,26,8)" fg:x="17739" fg:w="36"/><text x="87.1590%" y="575.50"></text></g><g><title>egui_example`eframe::native::epi_integration::EpiIntegration::update (17,987 samples, 88.12%)</title><rect x="1.9548%" y="629" width="88.1241%" height="15" fill="rgb(216,166,38)" fg:x="399" fg:w="17987"/><text x="2.2048%" y="639.50">egui_example`eframe::native::epi_integration::EpiIntegration::update</text></g><g><title>egui_example`egui::context::Context::run (17,987 samples, 88.12%)</title><rect x="1.9548%" y="613" width="88.1241%" height="15" fill="rgb(251,202,51)" fg:x="399" fg:w="17987"/><text x="2.2048%" y="623.50">egui_example`egui::context::Context::run</text></g><g><title>libsystem_platform.dylib`_platform_memmove (606 samples, 2.97%)</title><rect x="87.1099%" y="597" width="2.9690%" height="15" fill="rgb(254,216,34)" fg:x="17780" fg:w="606"/><text x="87.3599%" y="607.50">lib..</text></g><g><title>AppleMetalOpenGLRenderer`GLRTextureResource::dealloc (11 samples, 0.05%)</title><rect x="90.1034%" y="501" width="0.0539%" height="15" fill="rgb(251,32,27)" fg:x="18391" fg:w="11"/><text x="90.3534%" y="511.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyTexture dealloc] (11 samples, 0.05%)</title><rect x="90.1034%" y="485" width="0.0539%" height="15" fill="rgb(208,127,28)" fg:x="18391" fg:w="11"/><text x="90.3534%" y="495.50"></text></g><g><title>AGXMetalG14X`-[AGXTexture dealloc] (11 samples, 0.05%)</title><rect x="90.1034%" y="469" width="0.0539%" height="15" fill="rgb(224,137,22)" fg:x="18391" fg:w="11"/><text x="90.3534%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (11 samples, 0.05%)</title><rect x="90.1034%" y="453" width="0.0539%" height="15" fill="rgb(254,70,32)" fg:x="18391" fg:w="11"/><text x="90.3534%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (11 samples, 0.05%)</title><rect x="90.1034%" y="437" width="0.0539%" height="15" fill="rgb(229,75,37)" fg:x="18391" fg:w="11"/><text x="90.3534%" y="447.50"></text></g><g><title>CoreFoundation`_CFRelease (11 samples, 0.05%)</title><rect x="90.1034%" y="421" width="0.0539%" height="15" fill="rgb(252,64,23)" fg:x="18391" fg:w="11"/><text x="90.3534%" y="431.50"></text></g><g><title>IOKit`iokit_user_client_trap (11 samples, 0.05%)</title><rect x="90.1034%" y="405" width="0.0539%" height="15" fill="rgb(232,162,48)" fg:x="18391" fg:w="11"/><text x="90.3534%" y="415.50"></text></g><g><title>GLEngine`gleFreeTextureObject (12 samples, 0.06%)</title><rect x="90.1034%" y="565" width="0.0588%" height="15" fill="rgb(246,160,12)" fg:x="18391" fg:w="12"/><text x="90.3534%" y="575.50"></text></g><g><title>libGFXShared.dylib`gfxDestroyPluginTexture (12 samples, 0.06%)</title><rect x="90.1034%" y="549" width="0.0588%" height="15" fill="rgb(247,166,0)" fg:x="18391" fg:w="12"/><text x="90.3534%" y="559.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldDestroyTexture (12 samples, 0.06%)</title><rect x="90.1034%" y="533" width="0.0588%" height="15" fill="rgb(249,219,21)" fg:x="18391" fg:w="12"/><text x="90.3534%" y="543.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::dealloc (12 samples, 0.06%)</title><rect x="90.1034%" y="517" width="0.0588%" height="15" fill="rgb(205,209,3)" fg:x="18391" fg:w="12"/><text x="90.3534%" y="527.50"></text></g><g><title>egui_example`&lt;glow::native::Context as glow::HasContext&gt;::delete_texture (15 samples, 0.07%)</title><rect x="90.0936%" y="613" width="0.0735%" height="15" fill="rgb(243,44,1)" fg:x="18389" fg:w="15"/><text x="90.3436%" y="623.50"></text></g><g><title>GLEngine`glDeleteTextures_Exec (15 samples, 0.07%)</title><rect x="90.0936%" y="597" width="0.0735%" height="15" fill="rgb(206,159,16)" fg:x="18389" fg:w="15"/><text x="90.3436%" y="607.50"></text></g><g><title>GLEngine`gleUnbindDeleteHashNamesAndObjects (13 samples, 0.06%)</title><rect x="90.1034%" y="581" width="0.0637%" height="15" fill="rgb(244,77,30)" fg:x="18391" fg:w="13"/><text x="90.3534%" y="591.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (3 samples, 0.01%)</title><rect x="90.1818%" y="517" width="0.0147%" height="15" fill="rgb(218,69,12)" fg:x="18407" fg:w="3"/><text x="90.4318%" y="527.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::beginRenderPass (4 samples, 0.02%)</title><rect x="90.1818%" y="549" width="0.0196%" height="15" fill="rgb(212,87,7)" fg:x="18407" fg:w="4"/><text x="90.4318%" y="559.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (4 samples, 0.02%)</title><rect x="90.1818%" y="533" width="0.0196%" height="15" fill="rgb(245,114,25)" fg:x="18407" fg:w="4"/><text x="90.4318%" y="543.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldRenderVertexArray(GLDContextRec*, unsigned int, unsigned int, int, int, unsigned int, void const*, int, void const*) (7 samples, 0.03%)</title><rect x="90.1818%" y="565" width="0.0343%" height="15" fill="rgb(210,61,42)" fg:x="18407" fg:w="7"/><text x="90.4318%" y="575.50"></text></g><g><title>egui_example`egui_glow::painter::Painter::paint_mesh (14 samples, 0.07%)</title><rect x="90.1671%" y="597" width="0.0686%" height="15" fill="rgb(211,52,33)" fg:x="18404" fg:w="14"/><text x="90.4171%" y="607.50"></text></g><g><title>GLEngine`glDrawElements_GL3Exec (11 samples, 0.05%)</title><rect x="90.1818%" y="581" width="0.0539%" height="15" fill="rgb(234,58,33)" fg:x="18407" fg:w="11"/><text x="90.4318%" y="591.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (4 samples, 0.02%)</title><rect x="90.2161%" y="565" width="0.0196%" height="15" fill="rgb(220,115,36)" fg:x="18414" fg:w="4"/><text x="90.4661%" y="575.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (4 samples, 0.02%)</title><rect x="90.2161%" y="549" width="0.0196%" height="15" fill="rgb(243,153,54)" fg:x="18414" fg:w="4"/><text x="90.4661%" y="559.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldUpdateDispatch (4 samples, 0.02%)</title><rect x="90.2161%" y="533" width="0.0196%" height="15" fill="rgb(251,47,18)" fg:x="18414" fg:w="4"/><text x="90.4661%" y="543.50"></text></g><g><title>egui_example`egui_glow::painter::Painter::paint_primitives (15 samples, 0.07%)</title><rect x="90.1671%" y="613" width="0.0735%" height="15" fill="rgb(242,102,42)" fg:x="18404" fg:w="15"/><text x="90.4171%" y="623.50"></text></g><g><title>AGXMetalG14X`-[AGXTexture initWithDevice:desc:isSuballocDisabled:] (11 samples, 0.05%)</title><rect x="90.2504%" y="533" width="0.0539%" height="15" fill="rgb(234,31,38)" fg:x="18421" fg:w="11"/><text x="90.5004%" y="543.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithDevice:descriptor:sysMemSize:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (11 samples, 0.05%)</title><rect x="90.2504%" y="517" width="0.0539%" height="15" fill="rgb(221,117,51)" fg:x="18421" fg:w="11"/><text x="90.5004%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (11 samples, 0.05%)</title><rect x="90.2504%" y="501" width="0.0539%" height="15" fill="rgb(212,20,18)" fg:x="18421" fg:w="11"/><text x="90.5004%" y="511.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (11 samples, 0.05%)</title><rect x="90.2504%" y="485" width="0.0539%" height="15" fill="rgb(245,133,36)" fg:x="18421" fg:w="11"/><text x="90.5004%" y="495.50"></text></g><g><title>IOKit`IOConnectCallMethod (11 samples, 0.05%)</title><rect x="90.2504%" y="469" width="0.0539%" height="15" fill="rgb(212,6,19)" fg:x="18421" fg:w="11"/><text x="90.5004%" y="479.50"></text></g><g><title>IOKit`io_connect_method (11 samples, 0.05%)</title><rect x="90.2504%" y="453" width="0.0539%" height="15" fill="rgb(218,1,36)" fg:x="18421" fg:w="11"/><text x="90.5004%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.05%)</title><rect x="90.2504%" y="437" width="0.0539%" height="15" fill="rgb(246,84,54)" fg:x="18421" fg:w="11"/><text x="90.5004%" y="447.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::loadObj (12 samples, 0.06%)</title><rect x="90.2504%" y="549" width="0.0588%" height="15" fill="rgb(242,110,6)" fg:x="18421" fg:w="12"/><text x="90.5004%" y="559.50"></text></g><g><title>AGXMetalG14X`agxaAssertBufferIsValid(unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) (8 samples, 0.04%)</title><rect x="90.3091%" y="485" width="0.0392%" height="15" fill="rgb(214,47,5)" fg:x="18433" fg:w="8"/><text x="90.5591%" y="495.50"></text></g><g><title>AGXMetalG14X`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14X::Encoders, AGX::G14X::Classes&gt;::writeRegion (1,618 samples, 7.93%)</title><rect x="90.3091%" y="501" width="7.9271%" height="15" fill="rgb(218,159,25)" fg:x="18433" fg:w="1618"/><text x="90.5591%" y="511.50">AGXMetalG14..</text></g><g><title>AGXMetalG14X`void TiledMemory&lt;(TwiddleOrder)1&gt;::convertTiles2D&lt;false&gt;(void*, void const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned long, unsigned int, unsigned int, unsigned long, void (*) (1,610 samples, 7.89%)</title><rect x="90.3483%" y="485" width="7.8879%" height="15" fill="rgb(215,211,28)" fg:x="18441" fg:w="1610"/><text x="90.5983%" y="495.50">AGXMetalG14..</text></g><g><title>AGXMetalG14X`void agxsTwiddleAddressCommon&lt;(TwiddleOrder)1, AGXSConverterPassThru&lt;true, 4ul, 1u, (TwiddleOrder)1&gt;&gt;(AGXSConverterPassThru&lt;true, 4ul, 1u, (TwiddleOrder)1&gt;::twid_ptr_type, AGXSConverterPassThru&lt;true, 4ul, 1u, (1,610 samples, 7.89%)</title><rect x="90.3483%" y="469" width="7.8879%" height="15" fill="rgb(238,59,32)" fg:x="18441" fg:w="1610"/><text x="90.5983%" y="479.50">AGXMetalG14..</text></g><g><title>AppleMetalOpenGLRenderer`GLDTextureRec::uploadTextureLevel(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, GLDBufferRec*, unsigned char*, int, int, int, id&lt;MTLCommandBufferSPI&gt; () block_pointer, void (objc_object&lt;MTLCommandBufferSPI&gt;, unsigned int) block_pointer, void (void () block_pointer) block_pointer, void (void  (1,619 samples, 7.93%)</title><rect x="90.3091%" y="549" width="7.9320%" height="15" fill="rgb(226,82,3)" fg:x="18433" fg:w="1619"/><text x="90.5591%" y="559.50">AppleMetalO..</text></g><g><title>AppleMetalOpenGLRenderer`invocation function for block in GLDTextureRec::uploadTextureLevel(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, GLDBufferRec*, unsigned char*, int, int, int, id&lt;MTLCommandBufferSPI&gt; () block_pointer, void (objc_object&lt;MTLCommandBufferSPI&gt;, unsigned int) block_pointer, void (void () block_pointer) block_pointer, void (void  (1,619 samples, 7.93%)</title><rect x="90.3091%" y="533" width="7.9320%" height="15" fill="rgb(240,164,32)" fg:x="18433" fg:w="1619"/><text x="90.5591%" y="543.50">AppleMetalO..</text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (1,619 samples, 7.93%)</title><rect x="90.3091%" y="517" width="7.9320%" height="15" fill="rgb(232,46,7)" fg:x="18433" fg:w="1619"/><text x="90.5591%" y="527.50">AGXMetalG14..</text></g><g><title>egui_example`egui_glow::painter::Painter::paint_and_update_textures (1,664 samples, 8.15%)</title><rect x="90.0936%" y="629" width="8.1525%" height="15" fill="rgb(229,129,53)" fg:x="18389" fg:w="1664"/><text x="90.3436%" y="639.50">egui_exampl..</text></g><g><title>egui_example`egui_glow::painter::Painter::upload_texture_srgb (1,633 samples, 8.00%)</title><rect x="90.2455%" y="613" width="8.0006%" height="15" fill="rgb(234,188,29)" fg:x="18420" fg:w="1633"/><text x="90.4955%" y="623.50">egui_exampl..</text></g><g><title>libGL.dylib`glTexImage2D (1,633 samples, 8.00%)</title><rect x="90.2455%" y="597" width="8.0006%" height="15" fill="rgb(246,141,4)" fg:x="18420" fg:w="1633"/><text x="90.4955%" y="607.50">libGL.dylib..</text></g><g><title>GLEngine`glTexImage2D_Exec (1,633 samples, 8.00%)</title><rect x="90.2455%" y="581" width="8.0006%" height="15" fill="rgb(229,23,39)" fg:x="18420" fg:w="1633"/><text x="90.4955%" y="591.50">GLEngine`gl..</text></g><g><title>AppleMetalOpenGLRenderer`gldModifyTexSubImage (1,633 samples, 8.00%)</title><rect x="90.2455%" y="565" width="8.0006%" height="15" fill="rgb(206,12,3)" fg:x="18420" fg:w="1633"/><text x="90.4955%" y="575.50">AppleMetalO..</text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushContext (25 samples, 0.12%)</title><rect x="98.2754%" y="517" width="0.1225%" height="15" fill="rgb(252,226,20)" fg:x="20059" fg:w="25"/><text x="98.5254%" y="527.50"></text></g><g><title>Metal`-[_MTLCommandQueue submitCommandBuffer:] (25 samples, 0.12%)</title><rect x="98.2754%" y="501" width="0.1225%" height="15" fill="rgb(216,123,35)" fg:x="20059" fg:w="25"/><text x="98.5254%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (25 samples, 0.12%)</title><rect x="98.2754%" y="485" width="0.1225%" height="15" fill="rgb(212,68,40)" fg:x="20059" fg:w="25"/><text x="98.5254%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (25 samples, 0.12%)</title><rect x="98.2754%" y="469" width="0.1225%" height="15" fill="rgb(254,125,32)" fg:x="20059" fg:w="25"/><text x="98.5254%" y="479.50"></text></g><g><title>Metal`__40-[_MTLCommandQueue submitCommandBuffer:]_block_invoke (25 samples, 0.12%)</title><rect x="98.2754%" y="453" width="0.1225%" height="15" fill="rgb(253,97,22)" fg:x="20059" fg:w="25"/><text x="98.5254%" y="463.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (25 samples, 0.12%)</title><rect x="98.2754%" y="437" width="0.1225%" height="15" fill="rgb(241,101,14)" fg:x="20059" fg:w="25"/><text x="98.5254%" y="447.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (24 samples, 0.12%)</title><rect x="98.2803%" y="421" width="0.1176%" height="15" fill="rgb(238,103,29)" fg:x="20060" fg:w="24"/><text x="98.5303%" y="431.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (24 samples, 0.12%)</title><rect x="98.2803%" y="405" width="0.1176%" height="15" fill="rgb(233,195,47)" fg:x="20060" fg:w="24"/><text x="98.5303%" y="415.50"></text></g><g><title>IOKit`iokit_user_client_trap (24 samples, 0.12%)</title><rect x="98.2803%" y="389" width="0.1176%" height="15" fill="rgb(246,218,30)" fg:x="20060" fg:w="24"/><text x="98.5303%" y="399.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldUpdateDispatch (3 samples, 0.01%)</title><rect x="98.4077%" y="485" width="0.0147%" height="15" fill="rgb(219,145,47)" fg:x="20086" fg:w="3"/><text x="98.6577%" y="495.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::loadCurrentTextures (3 samples, 0.01%)</title><rect x="98.4077%" y="469" width="0.0147%" height="15" fill="rgb(243,12,26)" fg:x="20086" fg:w="3"/><text x="98.6577%" y="479.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCore (6 samples, 0.03%)</title><rect x="98.3979%" y="501" width="0.0294%" height="15" fill="rgb(214,87,16)" fg:x="20084" fg:w="6"/><text x="98.6479%" y="511.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldEndPrimitiveBuffer(GLDContextRec*, unsigned int, unsigned int, int) (4 samples, 0.02%)</title><rect x="98.4273%" y="485" width="0.0196%" height="15" fill="rgb(208,99,42)" fg:x="20090" fg:w="4"/><text x="98.6773%" y="495.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (3 samples, 0.01%)</title><rect x="98.4469%" y="421" width="0.0147%" height="15" fill="rgb(253,99,2)" fg:x="20094" fg:w="3"/><text x="98.6969%" y="431.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (40 samples, 0.20%)</title><rect x="98.2705%" y="533" width="0.1960%" height="15" fill="rgb(220,168,23)" fg:x="20058" fg:w="40"/><text x="98.5205%" y="543.50"></text></g><g><title>GLEngine`glDrawArrays_IMM_Exec (14 samples, 0.07%)</title><rect x="98.3979%" y="517" width="0.0686%" height="15" fill="rgb(242,38,24)" fg:x="20084" fg:w="14"/><text x="98.6479%" y="527.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_ExecCore (8 samples, 0.04%)</title><rect x="98.4273%" y="501" width="0.0392%" height="15" fill="rgb(225,182,9)" fg:x="20090" fg:w="8"/><text x="98.6773%" y="511.50"></text></g><g><title>GLEngine`gleBeginPrimitiveTCLFunc (4 samples, 0.02%)</title><rect x="98.4469%" y="485" width="0.0196%" height="15" fill="rgb(243,178,37)" fg:x="20094" fg:w="4"/><text x="98.6969%" y="495.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldBeginPrimitiveBuffer(GLDContextRec*, unsigned int, int*) (4 samples, 0.02%)</title><rect x="98.4469%" y="469" width="0.0196%" height="15" fill="rgb(232,139,19)" fg:x="20094" fg:w="4"/><text x="98.6969%" y="479.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::beginRenderPass (4 samples, 0.02%)</title><rect x="98.4469%" y="453" width="0.0196%" height="15" fill="rgb(225,201,24)" fg:x="20094" fg:w="4"/><text x="98.6969%" y="463.50"></text></g><g><title>AGXMetalG14X`-[AGXG14XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (4 samples, 0.02%)</title><rect x="98.4469%" y="437" width="0.0196%" height="15" fill="rgb(221,47,46)" fg:x="20094" fg:w="4"/><text x="98.6969%" y="447.50"></text></g><g><title>AppKit`is_surface_opaque (9 samples, 0.04%)</title><rect x="98.4665%" y="533" width="0.0441%" height="15" fill="rgb(249,23,13)" fg:x="20098" fg:w="9"/><text x="98.7165%" y="543.50"></text></g><g><title>SkyLight`SLSGetSurfaceOpacity (9 samples, 0.04%)</title><rect x="98.4665%" y="517" width="0.0441%" height="15" fill="rgb(219,9,5)" fg:x="20098" fg:w="9"/><text x="98.7165%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (9 samples, 0.04%)</title><rect x="98.4665%" y="501" width="0.0441%" height="15" fill="rgb(254,171,16)" fg:x="20098" fg:w="9"/><text x="98.7165%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (9 samples, 0.04%)</title><rect x="98.4665%" y="485" width="0.0441%" height="15" fill="rgb(230,171,20)" fg:x="20098" fg:w="9"/><text x="98.7165%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (9 samples, 0.04%)</title><rect x="98.4665%" y="469" width="0.0441%" height="15" fill="rgb(210,71,41)" fg:x="20098" fg:w="9"/><text x="98.7165%" y="479.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (3 samples, 0.01%)</title><rect x="98.5302%" y="533" width="0.0147%" height="15" fill="rgb(206,173,20)" fg:x="20111" fg:w="3"/><text x="98.7802%" y="543.50"></text></g><g><title>QuartzCore`release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (3 samples, 0.01%)</title><rect x="98.5302%" y="517" width="0.0147%" height="15" fill="rgb(233,88,34)" fg:x="20111" fg:w="3"/><text x="98.7802%" y="527.50"></text></g><g><title>IOKit`iokit_user_client_trap (3 samples, 0.01%)</title><rect x="98.5302%" y="501" width="0.0147%" height="15" fill="rgb(223,209,46)" fg:x="20111" fg:w="3"/><text x="98.7802%" y="511.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage (3 samples, 0.01%)</title><rect x="98.5449%" y="533" width="0.0147%" height="15" fill="rgb(250,43,18)" fg:x="20114" fg:w="3"/><text x="98.7949%" y="543.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (3 samples, 0.01%)</title><rect x="98.5449%" y="517" width="0.0147%" height="15" fill="rgb(208,13,10)" fg:x="20114" fg:w="3"/><text x="98.7949%" y="527.50"></text></g><g><title>SkyLight`SLSGetSurfaceBinding (6 samples, 0.03%)</title><rect x="98.5596%" y="533" width="0.0294%" height="15" fill="rgb(212,200,36)" fg:x="20117" fg:w="6"/><text x="98.8096%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (4 samples, 0.02%)</title><rect x="98.5694%" y="517" width="0.0196%" height="15" fill="rgb(225,90,30)" fg:x="20119" fg:w="4"/><text x="98.8194%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (4 samples, 0.02%)</title><rect x="98.5694%" y="501" width="0.0196%" height="15" fill="rgb(236,182,39)" fg:x="20119" fg:w="4"/><text x="98.8194%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.02%)</title><rect x="98.5694%" y="485" width="0.0196%" height="15" fill="rgb(212,144,35)" fg:x="20119" fg:w="4"/><text x="98.8194%" y="495.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (67 samples, 0.33%)</title><rect x="98.2656%" y="565" width="0.3283%" height="15" fill="rgb(228,63,44)" fg:x="20057" fg:w="67"/><text x="98.5156%" y="575.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (66 samples, 0.32%)</title><rect x="98.2705%" y="549" width="0.3234%" height="15" fill="rgb(228,109,6)" fg:x="20058" fg:w="66"/><text x="98.5205%" y="559.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushContext (109 samples, 0.53%)</title><rect x="98.5939%" y="549" width="0.5340%" height="15" fill="rgb(238,117,24)" fg:x="20124" fg:w="109"/><text x="98.8439%" y="559.50"></text></g><g><title>Metal`-[_MTLCommandQueue submitCommandBuffer:] (108 samples, 0.53%)</title><rect x="98.5988%" y="533" width="0.5291%" height="15" fill="rgb(242,26,26)" fg:x="20125" fg:w="108"/><text x="98.8488%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (108 samples, 0.53%)</title><rect x="98.5988%" y="517" width="0.5291%" height="15" fill="rgb(221,92,48)" fg:x="20125" fg:w="108"/><text x="98.8488%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (108 samples, 0.53%)</title><rect x="98.5988%" y="501" width="0.5291%" height="15" fill="rgb(209,209,32)" fg:x="20125" fg:w="108"/><text x="98.8488%" y="511.50"></text></g><g><title>Metal`__40-[_MTLCommandQueue submitCommandBuffer:]_block_invoke (108 samples, 0.53%)</title><rect x="98.5988%" y="485" width="0.5291%" height="15" fill="rgb(221,70,22)" fg:x="20125" fg:w="108"/><text x="98.8488%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (108 samples, 0.53%)</title><rect x="98.5988%" y="469" width="0.5291%" height="15" fill="rgb(248,145,5)" fg:x="20125" fg:w="108"/><text x="98.8488%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (108 samples, 0.53%)</title><rect x="98.5988%" y="453" width="0.5291%" height="15" fill="rgb(226,116,26)" fg:x="20125" fg:w="108"/><text x="98.8488%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (108 samples, 0.53%)</title><rect x="98.5988%" y="437" width="0.5291%" height="15" fill="rgb(244,5,17)" fg:x="20125" fg:w="108"/><text x="98.8488%" y="447.50"></text></g><g><title>IOKit`iokit_user_client_trap (108 samples, 0.53%)</title><rect x="98.5988%" y="421" width="0.5291%" height="15" fill="rgb(252,159,33)" fg:x="20125" fg:w="108"/><text x="98.8488%" y="431.50"></text></g><g><title>egui_example`glutin::api::cgl::context::ContextInner::flush_buffer (185 samples, 0.91%)</title><rect x="98.2607%" y="629" width="0.9064%" height="15" fill="rgb(206,71,0)" fg:x="20056" fg:w="185"/><text x="98.5107%" y="639.50"></text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (185 samples, 0.91%)</title><rect x="98.2607%" y="613" width="0.9064%" height="15" fill="rgb(233,118,54)" fg:x="20056" fg:w="185"/><text x="98.5107%" y="623.50"></text></g><g><title>OpenGL`CGLFlushDrawable (185 samples, 0.91%)</title><rect x="98.2607%" y="597" width="0.9064%" height="15" fill="rgb(234,83,48)" fg:x="20056" fg:w="185"/><text x="98.5107%" y="607.50"></text></g><g><title>GLEngine`glSwap_Exec (185 samples, 0.91%)</title><rect x="98.2607%" y="581" width="0.9064%" height="15" fill="rgb(228,3,54)" fg:x="20056" fg:w="185"/><text x="98.5107%" y="591.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldPresentFramebufferData (117 samples, 0.57%)</title><rect x="98.5939%" y="565" width="0.5732%" height="15" fill="rgb(226,155,13)" fg:x="20124" fg:w="117"/><text x="98.8439%" y="575.50"></text></g><g><title>SkyLight`SLSFlushSurfaceWithOptionsAndIndex (8 samples, 0.04%)</title><rect x="99.1279%" y="549" width="0.0392%" height="15" fill="rgb(241,28,37)" fg:x="20233" fg:w="8"/><text x="99.3779%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (8 samples, 0.04%)</title><rect x="99.1279%" y="533" width="0.0392%" height="15" fill="rgb(233,93,10)" fg:x="20233" fg:w="8"/><text x="99.3779%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (8 samples, 0.04%)</title><rect x="99.1279%" y="517" width="0.0392%" height="15" fill="rgb(225,113,19)" fg:x="20233" fg:w="8"/><text x="99.3779%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.04%)</title><rect x="99.1279%" y="501" width="0.0392%" height="15" fill="rgb(241,2,18)" fg:x="20233" fg:w="8"/><text x="99.3779%" y="511.50"></text></g><g><title>egui_example`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint (19,953 samples, 97.76%)</title><rect x="1.4208%" y="645" width="97.7561%" height="15" fill="rgb(228,207,21)" fg:x="290" fg:w="19953"/><text x="1.6708%" y="655.50">egui_example`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint</text></g><g><title>egui_example`winit::platform_impl::macos::event_handler::EventHandler::handle_event (19,957 samples, 97.78%)</title><rect x="1.4208%" y="709" width="97.7757%" height="15" fill="rgb(213,211,35)" fg:x="290" fg:w="19957"/><text x="1.6708%" y="719.50">egui_example`winit::platform_impl::macos::event_handler::EventHandler::handle_event</text></g><g><title>egui_example`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (19,957 samples, 97.78%)</title><rect x="1.4208%" y="693" width="97.7757%" height="15" fill="rgb(209,83,10)" fg:x="290" fg:w="19957"/><text x="1.6708%" y="703.50">egui_example`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}}</text></g><g><title>egui_example`winit::event_loop::EventLoop&lt;T&gt;::run_app::_{{closure}} (19,957 samples, 97.78%)</title><rect x="1.4208%" y="677" width="97.7757%" height="15" fill="rgb(209,164,1)" fg:x="290" fg:w="19957"/><text x="1.6708%" y="687.50">egui_example`winit::event_loop::EventLoop&lt;T&gt;::run_app::_{{closure}}</text></g><g><title>egui_example`eframe::native::event_loop_context::with_event_loop_context (19,957 samples, 97.78%)</title><rect x="1.4208%" y="661" width="97.7757%" height="15" fill="rgb(213,184,43)" fg:x="290" fg:w="19957"/><text x="1.6708%" y="671.50">egui_example`eframe::native::event_loop_context::with_event_loop_context</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (20,042 samples, 98.19%)</title><rect x="1.0093%" y="773" width="98.1922%" height="15" fill="rgb(231,61,34)" fg:x="206" fg:w="20042"/><text x="1.2593%" y="783.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (20,041 samples, 98.19%)</title><rect x="1.0142%" y="757" width="98.1873%" height="15" fill="rgb(235,75,3)" fg:x="207" fg:w="20041"/><text x="1.2642%" y="767.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>egui_example`winit::platform_impl::macos::observer::control_flow_end_handler (19,958 samples, 97.78%)</title><rect x="1.4208%" y="741" width="97.7806%" height="15" fill="rgb(220,106,47)" fg:x="290" fg:w="19958"/><text x="1.6708%" y="751.50">egui_example`winit::platform_impl::macos::observer::control_flow_end_handler</text></g><g><title>egui_example`winit::platform_impl::macos::app_state::ApplicationDelegate::cleared (19,958 samples, 97.78%)</title><rect x="1.4208%" y="725" width="97.7806%" height="15" fill="rgb(210,196,33)" fg:x="290" fg:w="19958"/><text x="1.6708%" y="735.50">egui_example`winit::platform_impl::macos::app_state::ApplicationDelegate::cleared</text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (10 samples, 0.05%)</title><rect x="99.2112%" y="773" width="0.0490%" height="15" fill="rgb(229,154,42)" fg:x="20250" fg:w="10"/><text x="99.4612%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (10 samples, 0.05%)</title><rect x="99.2112%" y="757" width="0.0490%" height="15" fill="rgb(228,114,26)" fg:x="20250" fg:w="10"/><text x="99.4612%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (10 samples, 0.05%)</title><rect x="99.2112%" y="741" width="0.0490%" height="15" fill="rgb(208,144,1)" fg:x="20250" fg:w="10"/><text x="99.4612%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (10 samples, 0.05%)</title><rect x="99.2112%" y="725" width="0.0490%" height="15" fill="rgb(239,112,37)" fg:x="20250" fg:w="10"/><text x="99.4612%" y="735.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (20,077 samples, 98.36%)</title><rect x="0.9064%" y="805" width="98.3636%" height="15" fill="rgb(210,96,50)" fg:x="185" fg:w="20077"/><text x="1.1564%" y="815.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>CoreFoundation`__CFRunLoopRun (20,068 samples, 98.32%)</title><rect x="0.9505%" y="789" width="98.3195%" height="15" fill="rgb(222,178,2)" fg:x="194" fg:w="20068"/><text x="1.2005%" y="799.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>HIToolbox`_FirstEventTime (3 samples, 0.01%)</title><rect x="99.2700%" y="805" width="0.0147%" height="15" fill="rgb(226,74,18)" fg:x="20262" fg:w="3"/><text x="99.5200%" y="815.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (20,082 samples, 98.39%)</title><rect x="0.9064%" y="821" width="98.3881%" height="15" fill="rgb(225,67,54)" fg:x="185" fg:w="20082"/><text x="1.1564%" y="831.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>AppKit`_DPSNextEvent (20,123 samples, 98.59%)</title><rect x="0.7104%" y="869" width="98.5890%" height="15" fill="rgb(251,92,32)" fg:x="145" fg:w="20123"/><text x="0.9604%" y="879.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (20,085 samples, 98.40%)</title><rect x="0.8966%" y="853" width="98.4028%" height="15" fill="rgb(228,149,22)" fg:x="183" fg:w="20085"/><text x="1.1466%" y="863.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (20,085 samples, 98.40%)</title><rect x="0.8966%" y="837" width="98.4028%" height="15" fill="rgb(243,54,13)" fg:x="183" fg:w="20085"/><text x="1.1466%" y="847.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>AppKit`-[NSApplication run] (20,259 samples, 99.26%)</title><rect x="0.0539%" y="901" width="99.2553%" height="15" fill="rgb(243,180,28)" fg:x="11" fg:w="20259"/><text x="0.3039%" y="911.50">AppKit`-[NSApplication run]</text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (20,127 samples, 98.61%)</title><rect x="0.7006%" y="885" width="98.6086%" height="15" fill="rgb(208,167,24)" fg:x="143" fg:w="20127"/><text x="0.9506%" y="895.50">AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>egui_example`eframe::run_native (20,271 samples, 99.31%)</title><rect x="0.0049%" y="949" width="99.3141%" height="15" fill="rgb(245,73,45)" fg:x="1" fg:w="20271"/><text x="0.2549%" y="959.50">egui_example`eframe::run_native</text></g><g><title>egui_example`eframe::native::run::run_glow (20,271 samples, 99.31%)</title><rect x="0.0049%" y="933" width="99.3141%" height="15" fill="rgb(237,203,48)" fg:x="1" fg:w="20271"/><text x="0.2549%" y="943.50">egui_example`eframe::native::run::run_glow</text></g><g><title>egui_example`winit::platform_impl::macos::event_handler::EventHandler::set (20,261 samples, 99.27%)</title><rect x="0.0539%" y="917" width="99.2651%" height="15" fill="rgb(211,197,16)" fg:x="11" fg:w="20261"/><text x="0.3039%" y="927.50">egui_example`winit::platform_impl::macos::event_handler::EventHandler::set</text></g><g><title>egui_example`fontdb::Database::load_font_file_impl (3 samples, 0.01%)</title><rect x="99.3435%" y="885" width="0.0147%" height="15" fill="rgb(243,99,51)" fg:x="20277" fg:w="3"/><text x="99.5935%" y="895.50"></text></g><g><title>egui_example`fontdb::Database::load_font_file_impl (6 samples, 0.03%)</title><rect x="99.3582%" y="869" width="0.0294%" height="15" fill="rgb(215,123,29)" fg:x="20280" fg:w="6"/><text x="99.6082%" y="879.50"></text></g><g><title>egui_example`cosmic_text::font::system::FontSystem::new (11 samples, 0.05%)</title><rect x="99.3386%" y="933" width="0.0539%" height="15" fill="rgb(239,186,37)" fg:x="20276" fg:w="11"/><text x="99.5886%" y="943.50"></text></g><g><title>egui_example`fontdb::Database::load_system_fonts (10 samples, 0.05%)</title><rect x="99.3435%" y="917" width="0.0490%" height="15" fill="rgb(252,136,39)" fg:x="20277" fg:w="10"/><text x="99.5935%" y="927.50"></text></g><g><title>egui_example`fontdb::Database::load_fonts_dir_impl (10 samples, 0.05%)</title><rect x="99.3435%" y="901" width="0.0490%" height="15" fill="rgb(223,213,32)" fg:x="20277" fg:w="10"/><text x="99.5935%" y="911.50"></text></g><g><title>egui_example`fontdb::Database::load_fonts_dir_impl (7 samples, 0.03%)</title><rect x="99.3582%" y="885" width="0.0343%" height="15" fill="rgb(233,115,5)" fg:x="20280" fg:w="7"/><text x="99.6082%" y="895.50"></text></g><g><title>egui_example`main (20,288 samples, 99.40%)</title><rect x="0.0000%" y="1029" width="99.3974%" height="15" fill="rgb(207,226,44)" fg:x="0" fg:w="20288"/><text x="0.2500%" y="1039.50">egui_example`main</text></g><g><title>egui_example`std::rt::lang_start_internal (20,288 samples, 99.40%)</title><rect x="0.0000%" y="1013" width="99.3974%" height="15" fill="rgb(208,126,0)" fg:x="0" fg:w="20288"/><text x="0.2500%" y="1023.50">egui_example`std::rt::lang_start_internal</text></g><g><title>egui_example`std::rt::lang_start::_{{closure}} (20,288 samples, 99.40%)</title><rect x="0.0000%" y="997" width="99.3974%" height="15" fill="rgb(244,66,21)" fg:x="0" fg:w="20288"/><text x="0.2500%" y="1007.50">egui_example`std::rt::lang_start::_{{closure}}</text></g><g><title>egui_example`std::sys::backtrace::__rust_begin_short_backtrace (20,288 samples, 99.40%)</title><rect x="0.0000%" y="981" width="99.3974%" height="15" fill="rgb(222,97,12)" fg:x="0" fg:w="20288"/><text x="0.2500%" y="991.50">egui_example`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>egui_example`egui_example::main (20,288 samples, 99.40%)</title><rect x="0.0000%" y="965" width="99.3974%" height="15" fill="rgb(219,213,19)" fg:x="0" fg:w="20288"/><text x="0.2500%" y="975.50">egui_example`egui_example::main</text></g><g><title>egui_example`soft_ratatui::soft_backend::SoftBackend::new (16 samples, 0.08%)</title><rect x="99.3190%" y="949" width="0.0784%" height="15" fill="rgb(252,169,30)" fg:x="20272" fg:w="16"/><text x="99.5690%" y="959.50"></text></g><g><title>dyld`start (20,290 samples, 99.41%)</title><rect x="0.0000%" y="1045" width="99.4072%" height="15" fill="rgb(206,32,51)" fg:x="0" fg:w="20290"/><text x="0.2500%" y="1055.50">dyld`start</text></g><g><title>libsystem_kernel.dylib`__exit (3 samples, 0.01%)</title><rect x="99.4072%" y="1045" width="0.0147%" height="15" fill="rgb(250,172,42)" fg:x="20290" fg:w="3"/><text x="99.6572%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (50 samples, 0.24%)</title><rect x="99.4317%" y="1029" width="0.2450%" height="15" fill="rgb(209,34,43)" fg:x="20295" fg:w="50"/><text x="99.6817%" y="1039.50"></text></g><g><title>CoreUI`BOMFileClose (3 samples, 0.01%)</title><rect x="99.6864%" y="869" width="0.0147%" height="15" fill="rgb(223,11,35)" fg:x="20347" fg:w="3"/><text x="99.9364%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke (5 samples, 0.02%)</title><rect x="99.6864%" y="965" width="0.0245%" height="15" fill="rgb(251,219,26)" fg:x="20347" fg:w="5"/><text x="99.9364%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (5 samples, 0.02%)</title><rect x="99.6864%" y="949" width="0.0245%" height="15" fill="rgb(231,119,3)" fg:x="20347" fg:w="5"/><text x="99.9364%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.02%)</title><rect x="99.6864%" y="933" width="0.0245%" height="15" fill="rgb(216,97,11)" fg:x="20347" fg:w="5"/><text x="99.9364%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke3 (5 samples, 0.02%)</title><rect x="99.6864%" y="917" width="0.0245%" height="15" fill="rgb(223,59,9)" fg:x="20347" fg:w="5"/><text x="99.9364%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout2 (5 samples, 0.02%)</title><rect x="99.6864%" y="901" width="0.0245%" height="15" fill="rgb(233,93,31)" fg:x="20347" fg:w="5"/><text x="99.9364%" y="911.50"></text></g><g><title>CoreUI`__69-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:]_block_invoke (5 samples, 0.02%)</title><rect x="99.6864%" y="885" width="0.0245%" height="15" fill="rgb(239,81,33)" fg:x="20347" fg:w="5"/><text x="99.9364%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (7 samples, 0.03%)</title><rect x="99.6864%" y="1013" width="0.0343%" height="15" fill="rgb(213,120,34)" fg:x="20347" fg:w="7"/><text x="99.9364%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (7 samples, 0.03%)</title><rect x="99.6864%" y="997" width="0.0343%" height="15" fill="rgb(243,49,53)" fg:x="20347" fg:w="7"/><text x="99.9364%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (7 samples, 0.03%)</title><rect x="99.6864%" y="981" width="0.0343%" height="15" fill="rgb(247,216,33)" fg:x="20347" fg:w="7"/><text x="99.9364%" y="991.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLRResourceList::makeResourcesNotBusyAndReset (6 samples, 0.03%)</title><rect x="99.7648%" y="741" width="0.0294%" height="15" fill="rgb(226,26,14)" fg:x="20363" fg:w="6"/><text x="100.0148%" y="751.50"></text></g><g><title>AppleMetalOpenGLRenderer`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;GLDPixelConverter::ConversionFormat, unsigned long&gt;, std::__1::__unordered_map_hasher&lt;GLDPixelConverter::ConversionFormat, std::__1::__hash_value_type&lt;GLDPixelConverter::ConversionFormat, unsigned long&gt;, GLDPixelConverter::ConversionFormatHasher, std::__1::equal_to&lt;GLDPixelConverter::ConversionFormat&gt;, true&gt;, std::__1::__unordered_map_equal&lt;GLDPixelConverter::ConversionFormat, std::__1::__hash_value_type&lt;GLDPixelConverter::ConversionFormat, unsigned long&gt;, std::__1::equal_to&lt;GLDPixelConverter::ConversionFormat&gt;, GLDPixelConverter::ConversionFormatHasher, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;GLDPixelConverter::ConversionFormat, unsigned long&gt;&gt;&gt;::clear (6 samples, 0.03%)</title><rect x="99.7648%" y="725" width="0.0294%" height="15" fill="rgb(215,49,53)" fg:x="20363" fg:w="6"/><text x="100.0148%" y="735.50"></text></g><g><title>AppleMetalOpenGLRenderer`invocation function for block in GLDContextRec::flushContextInternal (7 samples, 0.03%)</title><rect x="99.7648%" y="757" width="0.0343%" height="15" fill="rgb(245,162,40)" fg:x="20363" fg:w="7"/><text x="100.0148%" y="767.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (9 samples, 0.04%)</title><rect x="99.7599%" y="821" width="0.0441%" height="15" fill="rgb(229,68,17)" fg:x="20362" fg:w="9"/><text x="100.0099%" y="831.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (9 samples, 0.04%)</title><rect x="99.7599%" y="805" width="0.0441%" height="15" fill="rgb(213,182,10)" fg:x="20362" fg:w="9"/><text x="100.0099%" y="815.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (8 samples, 0.04%)</title><rect x="99.7648%" y="789" width="0.0392%" height="15" fill="rgb(245,125,30)" fg:x="20363" fg:w="8"/><text x="100.0148%" y="799.50"></text></g><g><title>Metal`MTLDispatchListApply (8 samples, 0.04%)</title><rect x="99.7648%" y="773" width="0.0392%" height="15" fill="rgb(232,202,2)" fg:x="20363" fg:w="8"/><text x="100.0148%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (10 samples, 0.05%)</title><rect x="99.7599%" y="901" width="0.0490%" height="15" fill="rgb(237,140,51)" fg:x="20362" fg:w="10"/><text x="100.0099%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (10 samples, 0.05%)</title><rect x="99.7599%" y="885" width="0.0490%" height="15" fill="rgb(236,157,25)" fg:x="20362" fg:w="10"/><text x="100.0099%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (10 samples, 0.05%)</title><rect x="99.7599%" y="869" width="0.0490%" height="15" fill="rgb(219,209,0)" fg:x="20362" fg:w="10"/><text x="100.0099%" y="879.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (10 samples, 0.05%)</title><rect x="99.7599%" y="853" width="0.0490%" height="15" fill="rgb(240,116,54)" fg:x="20362" fg:w="10"/><text x="100.0099%" y="863.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (10 samples, 0.05%)</title><rect x="99.7599%" y="837" width="0.0490%" height="15" fill="rgb(216,10,36)" fg:x="20362" fg:w="10"/><text x="100.0099%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (11 samples, 0.05%)</title><rect x="99.7599%" y="949" width="0.0539%" height="15" fill="rgb(222,72,44)" fg:x="20362" fg:w="11"/><text x="100.0099%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (11 samples, 0.05%)</title><rect x="99.7599%" y="933" width="0.0539%" height="15" fill="rgb(232,159,9)" fg:x="20362" fg:w="11"/><text x="100.0099%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (11 samples, 0.05%)</title><rect x="99.7599%" y="917" width="0.0539%" height="15" fill="rgb(210,39,32)" fg:x="20362" fg:w="11"/><text x="100.0099%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (19 samples, 0.09%)</title><rect x="99.7452%" y="997" width="0.0931%" height="15" fill="rgb(216,194,45)" fg:x="20359" fg:w="19"/><text x="99.9952%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (18 samples, 0.09%)</title><rect x="99.7501%" y="981" width="0.0882%" height="15" fill="rgb(218,18,35)" fg:x="20360" fg:w="18"/><text x="100.0001%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (18 samples, 0.09%)</title><rect x="99.7501%" y="965" width="0.0882%" height="15" fill="rgb(207,83,51)" fg:x="20360" fg:w="18"/><text x="100.0001%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (4 samples, 0.02%)</title><rect x="99.8187%" y="949" width="0.0196%" height="15" fill="rgb(225,63,43)" fg:x="20374" fg:w="4"/><text x="100.0687%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (4 samples, 0.02%)</title><rect x="99.8187%" y="933" width="0.0196%" height="15" fill="rgb(207,57,36)" fg:x="20374" fg:w="4"/><text x="100.0687%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (4 samples, 0.02%)</title><rect x="99.8187%" y="917" width="0.0196%" height="15" fill="rgb(216,99,33)" fg:x="20374" fg:w="4"/><text x="100.0687%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.02%)</title><rect x="99.8187%" y="901" width="0.0196%" height="15" fill="rgb(225,42,16)" fg:x="20374" fg:w="4"/><text x="100.0687%" y="911.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (86 samples, 0.42%)</title><rect x="99.4219%" y="1045" width="0.4213%" height="15" fill="rgb(220,201,45)" fg:x="20293" fg:w="86"/><text x="99.6719%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (34 samples, 0.17%)</title><rect x="99.6766%" y="1029" width="0.1666%" height="15" fill="rgb(225,33,4)" fg:x="20345" fg:w="34"/><text x="99.9266%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (25 samples, 0.12%)</title><rect x="99.7207%" y="1013" width="0.1225%" height="15" fill="rgb(224,33,50)" fg:x="20354" fg:w="25"/><text x="99.9707%" y="1023.50"></text></g><g><title>SkyLight`SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.01%)</title><rect x="99.8677%" y="709" width="0.0147%" height="15" fill="rgb(246,198,51)" fg:x="20384" fg:w="3"/><text x="100.1177%" y="719.50"></text></g><g><title>SkyLight`bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void  (3 samples, 0.01%)</title><rect x="99.8677%" y="693" width="0.0147%" height="15" fill="rgb(205,22,4)" fg:x="20384" fg:w="3"/><text x="100.1177%" y="703.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void  (3 samples, 0.01%)</title><rect x="99.8677%" y="677" width="0.0147%" height="15" fill="rgb(206,3,8)" fg:x="20384" fg:w="3"/><text x="100.1177%" y="687.50"></text></g><g><title>SkyLight`invocation function for block in SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::operator()(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.01%)</title><rect x="99.8677%" y="661" width="0.0147%" height="15" fill="rgb(251,23,15)" fg:x="20384" fg:w="3"/><text x="100.1177%" y="671.50"></text></g><g><title>SkyLight`SLEventAuthenticationMessageCreateWithData (3 samples, 0.01%)</title><rect x="99.8677%" y="645" width="0.0147%" height="15" fill="rgb(252,88,28)" fg:x="20384" fg:w="3"/><text x="100.1177%" y="655.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.01%)</title><rect x="99.8677%" y="629" width="0.0147%" height="15" fill="rgb(212,127,14)" fg:x="20384" fg:w="3"/><text x="100.1177%" y="639.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr (3 samples, 0.01%)</title><rect x="99.8677%" y="613" width="0.0147%" height="15" fill="rgb(247,145,37)" fg:x="20384" fg:w="3"/><text x="100.1177%" y="623.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.01%)</title><rect x="99.8677%" y="597" width="0.0147%" height="15" fill="rgb(209,117,53)" fg:x="20384" fg:w="3"/><text x="100.1177%" y="607.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.01%)</title><rect x="99.8677%" y="581" width="0.0147%" height="15" fill="rgb(212,90,42)" fg:x="20384" fg:w="3"/><text x="100.1177%" y="591.50"></text></g><g><title>SkyLight`invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;(anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&gt;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&amp;&amp;)::&apos;lambda&apos;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create (3 samples, 0.01%)</title><rect x="99.8677%" y="565" width="0.0147%" height="15" fill="rgb(218,164,37)" fg:x="20384" fg:w="3"/><text x="100.1177%" y="575.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr (4 samples, 0.02%)</title><rect x="99.8677%" y="773" width="0.0196%" height="15" fill="rgb(246,65,34)" fg:x="20384" fg:w="4"/><text x="100.1177%" y="783.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt; (4 samples, 0.02%)</title><rect x="99.8677%" y="757" width="0.0196%" height="15" fill="rgb(231,100,33)" fg:x="20384" fg:w="4"/><text x="100.1177%" y="767.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (4 samples, 0.02%)</title><rect x="99.8677%" y="741" width="0.0196%" height="15" fill="rgb(228,126,14)" fg:x="20384" fg:w="4"/><text x="100.1177%" y="751.50"></text></g><g><title>SkyLight`invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&gt;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;&amp;)::&apos;lambda&apos;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(_SLEventRecordCreateWithBytesModern (4 samples, 0.02%)</title><rect x="99.8677%" y="725" width="0.0196%" height="15" fill="rgb(215,173,21)" fg:x="20384" fg:w="4"/><text x="100.1177%" y="735.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (7 samples, 0.03%)</title><rect x="99.8579%" y="837" width="0.0343%" height="15" fill="rgb(210,6,40)" fg:x="20382" fg:w="7"/><text x="100.1079%" y="847.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (7 samples, 0.03%)</title><rect x="99.8579%" y="821" width="0.0343%" height="15" fill="rgb(212,48,18)" fg:x="20382" fg:w="7"/><text x="100.1079%" y="831.50"></text></g><g><title>SkyLight`_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int) (7 samples, 0.03%)</title><rect x="99.8579%" y="805" width="0.0343%" height="15" fill="rgb(230,214,11)" fg:x="20382" fg:w="7"/><text x="100.1079%" y="815.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (7 samples, 0.03%)</title><rect x="99.8579%" y="789" width="0.0343%" height="15" fill="rgb(254,105,39)" fg:x="20382" fg:w="7"/><text x="100.1079%" y="799.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (19 samples, 0.09%)</title><rect x="99.8530%" y="965" width="0.0931%" height="15" fill="rgb(245,158,5)" fg:x="20381" fg:w="19"/><text x="100.1030%" y="975.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (19 samples, 0.09%)</title><rect x="99.8530%" y="949" width="0.0931%" height="15" fill="rgb(249,208,11)" fg:x="20381" fg:w="19"/><text x="100.1030%" y="959.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (19 samples, 0.09%)</title><rect x="99.8530%" y="933" width="0.0931%" height="15" fill="rgb(210,39,28)" fg:x="20381" fg:w="19"/><text x="100.1030%" y="943.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (18 samples, 0.09%)</title><rect x="99.8579%" y="917" width="0.0882%" height="15" fill="rgb(211,56,53)" fg:x="20382" fg:w="18"/><text x="100.1079%" y="927.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (18 samples, 0.09%)</title><rect x="99.8579%" y="901" width="0.0882%" height="15" fill="rgb(226,201,30)" fg:x="20382" fg:w="18"/><text x="100.1079%" y="911.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (18 samples, 0.09%)</title><rect x="99.8579%" y="885" width="0.0882%" height="15" fill="rgb(239,101,34)" fg:x="20382" fg:w="18"/><text x="100.1079%" y="895.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (18 samples, 0.09%)</title><rect x="99.8579%" y="869" width="0.0882%" height="15" fill="rgb(226,209,5)" fg:x="20382" fg:w="18"/><text x="100.1079%" y="879.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (18 samples, 0.09%)</title><rect x="99.8579%" y="853" width="0.0882%" height="15" fill="rgb(250,105,47)" fg:x="20382" fg:w="18"/><text x="100.1079%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (11 samples, 0.05%)</title><rect x="99.8922%" y="837" width="0.0539%" height="15" fill="rgb(230,72,3)" fg:x="20389" fg:w="11"/><text x="100.1422%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (11 samples, 0.05%)</title><rect x="99.8922%" y="821" width="0.0539%" height="15" fill="rgb(232,218,39)" fg:x="20389" fg:w="11"/><text x="100.1422%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.05%)</title><rect x="99.8922%" y="805" width="0.0539%" height="15" fill="rgb(248,166,6)" fg:x="20389" fg:w="11"/><text x="100.1422%" y="815.50"></text></g><g><title>all (20,411 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(247,89,20)" fg:x="0" fg:w="20411"/><text x="0.2500%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (32 samples, 0.16%)</title><rect x="99.8432%" y="1045" width="0.1568%" height="15" fill="rgb(248,130,54)" fg:x="20379" fg:w="32"/><text x="100.0932%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (32 samples, 0.16%)</title><rect x="99.8432%" y="1029" width="0.1568%" height="15" fill="rgb(234,196,4)" fg:x="20379" fg:w="32"/><text x="100.0932%" y="1039.50"></text></g><g><title>AppKit`_NSEventThread (32 samples, 0.16%)</title><rect x="99.8432%" y="1013" width="0.1568%" height="15" fill="rgb(250,143,31)" fg:x="20379" fg:w="32"/><text x="100.0932%" y="1023.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (32 samples, 0.16%)</title><rect x="99.8432%" y="997" width="0.1568%" height="15" fill="rgb(211,110,34)" fg:x="20379" fg:w="32"/><text x="100.0932%" y="1007.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (32 samples, 0.16%)</title><rect x="99.8432%" y="981" width="0.1568%" height="15" fill="rgb(215,124,48)" fg:x="20379" fg:w="32"/><text x="100.0932%" y="991.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (11 samples, 0.05%)</title><rect x="99.9461%" y="965" width="0.0539%" height="15" fill="rgb(216,46,13)" fg:x="20400" fg:w="11"/><text x="100.1961%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (11 samples, 0.05%)</title><rect x="99.9461%" y="949" width="0.0539%" height="15" fill="rgb(205,184,25)" fg:x="20400" fg:w="11"/><text x="100.1961%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (11 samples, 0.05%)</title><rect x="99.9461%" y="933" width="0.0539%" height="15" fill="rgb(228,1,10)" fg:x="20400" fg:w="11"/><text x="100.1961%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.05%)</title><rect x="99.9461%" y="917" width="0.0539%" height="15" fill="rgb(213,116,27)" fg:x="20400" fg:w="11"/><text x="100.1961%" y="927.50"></text></g></svg></svg>